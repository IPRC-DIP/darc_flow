{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[1 1 7]\n [7 4 1]\n [5 1 7]]"}, {"id": "1", "type": "stmt", "val": "mcolor = Count and return the color with the most occurrences in the inputgrid(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "mcolor", "val": "1"}, {"id": "3", "type": "stmt", "val": "ans_grid = Generate a 9*9 all-black grid, traverse the input grid, if the pixel (x, y) color is mcolor, then use (3*x, 3*y) as the upper left corner in the new grid, and the shape is (3, 3 ) subgrid is replaced by input_grid; if it is another color, no modification is made. return the new grid(input_grid, mcolor)", "subgraph": null}, {"id": "4", "type": "val", "name": "ans_grid", "val": "[[1. 1. 7. 1. 1. 7. 0. 0. 0.]\n [7. 4. 1. 7. 4. 1. 0. 0. 0.]\n [5. 1. 7. 5. 1. 7. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 1. 1. 7.]\n [0. 0. 0. 0. 0. 0. 7. 4. 1.]\n [0. 0. 0. 0. 0. 0. 5. 1. 7.]\n [0. 0. 0. 1. 1. 7. 0. 0. 0.]\n [0. 0. 0. 7. 4. 1. 0. 0. 0.]\n [0. 0. 0. 5. 1. 7. 0. 0. 0.]]"}, {"id": "5", "type": "stmt", "val": "return ans_grid", "subgraph": null}, {"id": "7", "type": "val", "name": "out", "val": "[[1. 1. 7. 1. 1. 7. 0. 0. 0.]\n [7. 4. 1. 7. 4. 1. 0. 0. 0.]\n [5. 1. 7. 5. 1. 7. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 1. 1. 7.]\n [0. 0. 0. 0. 0. 0. 7. 4. 1.]\n [0. 0. 0. 0. 0. 0. 5. 1. 7.]\n [0. 0. 0. 1. 1. 7. 0. 0. 0.]\n [0. 0. 0. 7. 4. 1. 0. 0. 0.]\n [0. 0. 0. 5. 1. 7. 0. 0. 0.]]"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["0", "3"], ["3", "4"], ["4", "5"], ["5", "7"]]}