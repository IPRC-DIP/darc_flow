{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[2 8 8 8 0 0 0 0 0 0]\n [8 8 1 8 0 0 2 8 1 0]\n [1 2 8 1 0 0 8 8 8 0]\n [8 8 8 8 0 0 2 1 8 0]\n [0 0 0 0 0 0 8 8 2 0]\n [0 0 0 0 0 0 2 8 1 0]\n [0 1 2 8 2 0 1 8 8 0]\n [0 8 8 1 8 0 0 0 0 0]\n [0 1 2 8 1 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "teal_rectangles = []", "subgraph": null}, {"id": "2", "type": "val", "name": "teal_rectangles", "val": "[]"}, {"id": "3", "type": "stmt", "val": "(rows, cols) = input_grid.shape", "subgraph": null}, {"id": "4", "type": "val", "name": "rows", "val": "10"}, {"id": "5", "type": "val", "name": "cols", "val": "10"}, {"id": "6", "type": "stmt", "val": "flag = np.zeros([rows, cols])", "subgraph": null}, {"id": "7", "type": "val", "name": "flag", "val": "[[0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]]"}, {"id": "8", "type": "stmt", "val": "for i in range(rows):", "subgraph": null}, {"id": "9", "type": "val", "name": "i", "val": "0"}, {"id": "10", "type": "stmt", "val": "for j in range(cols):", "subgraph": null}, {"id": "11", "type": "val", "name": "j", "val": "0"}, {"id": "13", "type": "stmt", "val": "(h, w) = find the teal rectangel in the input_grid which start at (i, j)'s height and width (may contain blue and red pixles)(input_grid, i, j)", "subgraph": null}, {"id": "14", "type": "val", "name": "h", "val": "4"}, {"id": "15", "type": "val", "name": "w", "val": "4"}, {"id": "17", "type": "stmt", "val": "teal_rectangles.append((i, j, h, w))", "subgraph": null}, {"id": "18", "type": "val", "name": "teal_rectangles", "val": "[(0, 0, 4, 4)]"}, {"id": "19", "type": "stmt", "val": "flag[i:i + h, j:j + w] = 1", "subgraph": null}, {"id": "20", "type": "val", "name": "flag", "val": "[[1. 1. 1. 1. 0. 0. 0. 0. 0. 0.]\n [1. 1. 1. 1. 0. 0. 0. 0. 0. 0.]\n [1. 1. 1. 1. 0. 0. 0. 0. 0. 0.]\n [1. 1. 1. 1. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0. 0.]]"}, {"id": "21", "type": "stmt", "val": "for j in range(cols):", "subgraph": null}, {"id": "22", "type": "val", "name": "j", "val": "1"}, {"id": "49", "type": "stmt", "val": "for i in range(rows):", "subgraph": null}, {"id": "50", "type": "val", "name": "i", "val": "1"}, {"id": "70", "type": "val", "name": "j", "val": "6"}, {"id": "72", "type": "stmt", "val": "(h, w) = find the teal rectangel in the input_grid which start at (i, j)'s height and width (may contain blue and red pixles)(input_grid, i, j)", "subgraph": null}, {"id": "73", "type": "val", "name": "h", "val": "6"}, {"id": "74", "type": "val", "name": "w", "val": "3"}, {"id": "76", "type": "stmt", "val": "teal_rectangles.append((i, j, h, w))", "subgraph": null}, {"id": "78", "type": "stmt", "val": "flag[i:i + h, j:j + w] = 1", "subgraph": null}, {"id": "235", "type": "val", "name": "teal_rectangles", "val": "[(0, 0, 4, 4), (1, 6, 6, 3), (6, 1, 3, 4)]"}, {"id": "363", "type": "stmt", "val": "max_red_rectangle = find the rectangle which have the most red pixles in teal_rectangles(input_grid, teal_rectangles)", "subgraph": null}, {"id": "364", "type": "val", "name": "max_red_rectangle", "val": "[[2 8 1]\n [8 8 8]\n [2 1 8]\n [8 8 2]\n [2 8 1]\n [1 8 8]]"}, {"id": "365", "type": "stmt", "val": "return max_red_rectangle", "subgraph": null}, {"id": "367", "type": "val", "name": "out", "val": "[[2 8 1]\n [8 8 8]\n [2 1 8]\n [8 8 2]\n [2 8 1]\n [1 8 8]]"}], "edges": [["1", "2"], ["0", "3"], ["3", "4"], ["3", "5"], ["4", "6"], ["5", "6"], ["6", "7"], ["4", "8"], ["8", "9"], ["5", "10"], ["10", "11"], ["0", "13"], ["11", "13"], ["9", "13"], ["13", "14"], ["13", "15"], ["2", "17"], ["14", "17"], ["15", "17"], ["9", "17"], ["11", "17"], ["17", "18"], ["14", "19"], ["7", "19"], ["15", "19"], ["9", "19"], ["11", "19"], ["19", "20"], ["5", "21"], ["11", "21"], ["21", "22"], ["4", "49"], ["9", "49"], ["49", "50"], ["14", "72"], ["15", "72"], ["0", "72"], ["70", "72"], ["50", "72"], ["72", "73"], ["72", "74"], ["18", "76"], ["73", "76"], ["74", "76"], ["50", "76"], ["70", "76"], ["73", "78"], ["20", "78"], ["74", "78"], ["50", "78"], ["70", "78"], ["235", "363"], ["0", "363"], ["363", "364"], ["364", "365"], ["365", "367"]]}