{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 5 0 5 0 0 5 5 0 5 0 0 0 5 0 5 0 0 0 5 5 0]\n [0 5 0 5 5 0 0 0 5 5 0 0 5 5 0 0 0 0 0 5 5 5]\n [0 0 0 0 5 5 5 0 0 0 0 5 5 0 0 5 5 0 0 5 5 5]\n [0 0 5 5 0 5 5 5 0 5 0 5 0 5 0 5 5 0 5 5 5 0]\n [0 5 0 5 2 2 5 2 2 5 0 0 5 0 5 5 5 0 0 5 5 0]\n [0 0 0 5 0 5 2 5 5 5 0 5 0 0 0 0 5 5 5 5 0 0]\n [5 5 0 0 5 5 2 0 5 5 0 0 0 5 0 0 0 5 5 5 5 5]\n [5 0 0 0 0 0 0 0 0 0 0 5 5 5 0 5 0 0 5 0 5 0]\n [5 5 5 5 5 0 0 5 5 0 5 2 5 2 5 5 0 0 5 5 5 0]\n [0 0 0 5 5 5 0 0 5 0 0 0 5 5 0 5 5 5 0 0 0 0]\n [0 0 0 5 5 5 0 5 0 5 0 5 5 2 5 0 5 0 0 5 5 0]\n [0 5 5 5 0 0 0 5 5 5 5 0 0 5 0 5 5 0 0 0 5 5]\n [5 5 0 0 5 5 5 0 0 5 5 0 5 0 5 5 0 0 5 5 0 5]\n [0 0 5 5 5 5 5 5 5 5 0 0 5 5 5 5 5 0 0 5 0 5]\n [5 5 0 5 5 2 2 2 5 5 5 0 5 5 5 0 5 0 0 5 5 0]\n [5 0 0 0 5 2 5 0 5 0 5 0 5 5 5 5 0 0 0 0 5 5]\n [5 5 5 0 0 2 0 5 5 0 0 2 2 2 2 2 5 0 5 0 5 5]\n [5 0 5 0 0 5 0 5 0 0 0 0 0 5 0 5 5 5 0 5 5 0]\n [5 5 5 5 5 0 5 0 5 5 5 5 0 5 0 0 5 5 0 5 0 5]]"}, {"id": "1", "type": "stmt", "val": "centers = traverse the input grid. and find a position that satisfies that the three of five positions containing itself, the top point at 2, the bottom point at 2, the left point at 2, the right point at 2 are red, not all the five positions are all red(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "centers", "val": "[(4, 6), (8, 13), (14, 5), (16, 13)]"}, {"id": "3", "type": "stmt", "val": "output = for each position in the second input, you should Change the non-red position of the cross with radius 3  to teal(input_grid, centers)", "subgraph": null}, {"id": "5", "type": "val", "name": "output", "val": "[[0 5 0 5 0 0 5 5 0 5 0 0 0 5 0 5 0 0 0 5 5 0]\n [0 5 0 5 5 0 0 0 5 5 0 0 5 5 0 0 0 0 0 5 5 5]\n [0 0 0 0 5 5 8 0 0 0 0 5 5 0 0 5 5 0 0 5 5 5]\n [0 0 5 5 0 5 8 5 0 5 0 5 0 5 0 5 5 0 5 5 5 0]\n [0 5 0 5 2 2 8 2 2 5 0 0 5 0 5 5 5 0 0 5 5 0]\n [0 0 0 5 0 5 2 5 5 5 0 5 0 0 0 0 5 5 5 5 0 0]\n [5 5 0 0 5 5 2 0 5 5 0 0 0 8 0 0 0 5 5 5 5 5]\n [5 0 0 0 0 0 0 0 0 0 0 5 5 8 0 5 0 0 5 0 5 0]\n [5 5 5 5 5 0 0 5 5 0 5 2 8 2 8 8 0 0 5 5 5 0]\n [0 0 0 5 5 5 0 0 5 0 0 0 5 8 0 5 5 5 0 0 0 0]\n [0 0 0 5 5 5 0 5 0 5 0 5 5 2 5 0 5 0 0 5 5 0]\n [0 5 5 5 0 0 0 5 5 5 5 0 0 5 0 5 5 0 0 0 5 5]\n [5 5 0 0 5 8 5 0 0 5 5 0 5 0 5 5 0 0 5 5 0 5]\n [0 0 5 5 5 8 5 5 5 5 0 0 5 5 5 5 5 0 0 5 0 5]\n [5 5 0 8 8 2 2 2 5 5 5 0 5 8 5 0 5 0 0 5 5 0]\n [5 0 0 0 5 2 5 0 5 0 5 0 5 8 5 5 0 0 0 0 5 5]\n [5 5 5 0 0 2 0 5 5 0 0 2 2 2 2 2 5 0 5 0 5 5]\n [5 0 5 0 0 5 0 5 0 0 0 0 0 8 0 5 5 5 0 5 5 0]\n [5 5 5 5 5 0 5 0 5 5 5 5 0 8 0 0 5 5 0 5 0 5]]"}, {"id": "6", "type": "stmt", "val": "return output", "subgraph": null}, {"id": "8", "type": "val", "name": "out", "val": "[[0 5 0 5 0 0 5 5 0 5 0 0 0 5 0 5 0 0 0 5 5 0]\n [0 5 0 5 5 0 0 0 5 5 0 0 5 5 0 0 0 0 0 5 5 5]\n [0 0 0 0 5 5 8 0 0 0 0 5 5 0 0 5 5 0 0 5 5 5]\n [0 0 5 5 0 5 8 5 0 5 0 5 0 5 0 5 5 0 5 5 5 0]\n [0 5 0 5 2 2 8 2 2 5 0 0 5 0 5 5 5 0 0 5 5 0]\n [0 0 0 5 0 5 2 5 5 5 0 5 0 0 0 0 5 5 5 5 0 0]\n [5 5 0 0 5 5 2 0 5 5 0 0 0 8 0 0 0 5 5 5 5 5]\n [5 0 0 0 0 0 0 0 0 0 0 5 5 8 0 5 0 0 5 0 5 0]\n [5 5 5 5 5 0 0 5 5 0 5 2 8 2 8 8 0 0 5 5 5 0]\n [0 0 0 5 5 5 0 0 5 0 0 0 5 8 0 5 5 5 0 0 0 0]\n [0 0 0 5 5 5 0 5 0 5 0 5 5 2 5 0 5 0 0 5 5 0]\n [0 5 5 5 0 0 0 5 5 5 5 0 0 5 0 5 5 0 0 0 5 5]\n [5 5 0 0 5 8 5 0 0 5 5 0 5 0 5 5 0 0 5 5 0 5]\n [0 0 5 5 5 8 5 5 5 5 0 0 5 5 5 5 5 0 0 5 0 5]\n [5 5 0 8 8 2 2 2 5 5 5 0 5 8 5 0 5 0 0 5 5 0]\n [5 0 0 0 5 2 5 0 5 0 5 0 5 8 5 5 0 0 0 0 5 5]\n [5 5 5 0 0 2 0 5 5 0 0 2 2 2 2 2 5 0 5 0 5 5]\n [5 0 5 0 0 5 0 5 0 0 0 0 0 8 0 5 5 5 0 5 5 0]\n [5 5 5 5 5 0 5 0 5 5 5 5 0 8 0 0 5 5 0 5 0 5]]"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["0", "3"], ["3", "5"], ["5", "6"], ["6", "8"]]}