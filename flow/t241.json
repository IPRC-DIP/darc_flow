{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[4 8 9 9 6 6 5 1 1 5 6 6 9 9 8 4]\n [8 6 9 9 6 7 1 5 5 1 7 6 9 9 6 8]\n [9 9 5 2 5 1 5 5 5 5 1 5 2 5 9 9]\n [9 9 2 2 1 5 5 9 9 5 5 1 2 2 9 9]\n [6 6 5 1 1 4 5 2 2 5 4 1 1 5 6 6]\n [6 0 0 0 4 4 2 7 7 2 4 4 5 1 7 6]\n [5 0 0 0 5 2 9 5 5 9 2 5 5 5 1 5]\n [1 0 0 0 2 7 5 9 9 5 7 2 9 5 5 1]\n [1 5 5 9 2 7 5 9 9 5 7 2 9 5 5 1]\n [5 1 5 5 5 2 9 5 5 9 2 5 5 5 1 5]\n [6 7 1 5 4 4 2 7 7 2 4 4 5 1 7 6]\n [6 6 5 1 1 4 5 2 2 5 4 1 1 5 6 6]\n [9 9 2 2 1 5 5 9 9 5 5 1 2 2 9 9]\n [9 9 5 2 5 1 5 5 5 5 1 5 2 5 9 9]\n [8 6 9 9 6 7 1 5 5 1 7 6 9 9 6 8]\n [4 8 9 9 6 6 5 1 1 5 6 6 9 9 8 4]]"}, {"id": "1", "type": "stmt", "val": "(tx, ty) = Traverse the inputgrid from top to bottom, from left to right, and return the coordinates of the first black pixel (tx, ty)(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "tx", "val": "5"}, {"id": "3", "type": "val", "name": "ty", "val": "1"}, {"id": "4", "type": "stmt", "val": "ans_grid = Rotate the inputgrid 90 degrees clockwise, and return the subgrid with (tx,ty) as the upper left corner and shape as (3,3)(input_grid, tx, ty)", "subgraph": null}, {"id": "5", "type": "val", "name": "ans_grid", "val": "[[7 1 5]\n [1 5 5]\n [5 5 9]]"}, {"id": "6", "type": "stmt", "val": "return ans_grid", "subgraph": null}, {"id": "8", "type": "val", "name": "out", "val": "[[7 1 5]\n [1 5 5]\n [5 5 9]]"}], "edges": [["0", "1"], ["1", "2"], ["1", "3"], ["2", "4"], ["0", "4"], ["3", "4"], ["4", "5"], ["5", "6"], ["6", "8"]]}