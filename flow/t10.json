{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[6 4 0 5 0 3 0 5 0 4 0]\n [0 0 3 5 2 8 6 5 8 0 2]\n [2 0 8 5 4 0 0 5 6 3 0]\n [5 5 5 5 5 5 5 5 5 5 5]\n [2 0 0 5 0 3 0 5 3 6 2]\n [3 4 6 5 8 4 2 5 0 0 4]\n [0 8 0 5 0 0 6 5 8 0 0]\n [5 5 5 5 5 5 5 5 5 5 5]\n [0 2 4 5 0 6 4 5 0 2 8]\n [0 6 3 5 0 0 3 5 4 0 6]\n [0 0 0 5 2 0 8 5 3 0 0]]"}, {"id": "1", "type": "stmt", "val": "output_grid = np.zeros((9, 9))", "subgraph": null}, {"id": "2", "type": "val", "name": "output_grid", "val": "[[0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0.]]"}, {"id": "3", "type": "stmt", "val": "remove_grey_input_grid = remove the 4-th, 8-th column and 4-th, 8-th row (input_grid)", "subgraph": null}, {"id": "4", "type": "val", "name": "remove_grey_input_grid", "val": "[[6 4 0 0 3 0 0 4 0]\n [0 0 3 2 8 6 8 0 2]\n [2 0 8 4 0 0 6 3 0]\n [2 0 0 0 3 0 3 6 2]\n [3 4 6 8 4 2 0 0 4]\n [0 8 0 0 0 6 8 0 0]\n [0 2 4 0 6 4 0 2 8]\n [0 6 3 0 0 3 4 0 6]\n [0 0 0 2 0 8 3 0 0]]"}, {"id": "5", "type": "stmt", "val": "sub_blocks = seperate the input grid into 9 3x3 sub block(remove_grey_input_grid)", "subgraph": null}, {"id": "6", "type": "val", "name": "sub_blocks", "val": "[array([[6, 4, 0],\n       [0, 0, 3],\n       [2, 0, 8]]), array([[0, 3, 0],\n       [2, 8, 6],\n       [4, 0, 0]]), array([[0, 4, 0],\n       [8, 0, 2],\n       [6, 3, 0]]), array([[2, 0, 0],\n       [3, 4, 6],\n       [0, 8, 0]]), array([[0, 3, 0],\n       [8, 4, 2],\n       [0, 0, 6]]), array([[3, 6, 2],\n       [0, 0, 4],\n       [8, 0, 0]]), array([[0, 2, 4],\n       [0, 6, 3],\n       [0, 0, 0]]), array([[0, 6, 4],\n       [0, 0, 3],\n       [2, 0, 8]]), array([[0, 2, 8],\n       [4, 0, 6],\n       [3, 0, 0]])]"}, {"id": "7", "type": "stmt", "val": "output_block = find the block contains 4 non black elements (sub_blocks)", "subgraph": null}, {"id": "8", "type": "val", "name": "output_block", "val": "[[0 2 4]\n [0 6 3]\n [0 0 0]]"}, {"id": "9", "type": "stmt", "val": "output_grid = for elements in output_block, set the i-th 3x3 block in output_grid to the color of the element(output_grid, output_block)", "subgraph": null}, {"id": "10", "type": "val", "name": "output_grid", "val": "[[0. 0. 0. 2. 2. 2. 4. 4. 4.]\n [0. 0. 0. 2. 2. 2. 4. 4. 4.]\n [0. 0. 0. 2. 2. 2. 4. 4. 4.]\n [0. 0. 0. 6. 6. 6. 3. 3. 3.]\n [0. 0. 0. 6. 6. 6. 3. 3. 3.]\n [0. 0. 0. 6. 6. 6. 3. 3. 3.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0. 0. 0. 0. 0.]]"}, {"id": "11", "type": "stmt", "val": "output_grid = add grey lines average 3 rows or column to make the 9x9 input grid to the 11x11 output grid(output_grid)", "subgraph": null}, {"id": "12", "type": "val", "name": "output_grid", "val": "[[0. 0. 0. 5. 2. 2. 2. 5. 4. 4. 4.]\n [0. 0. 0. 5. 2. 2. 2. 5. 4. 4. 4.]\n [0. 0. 0. 5. 2. 2. 2. 5. 4. 4. 4.]\n [5. 5. 5. 5. 5. 5. 5. 5. 5. 5. 5.]\n [0. 0. 0. 5. 6. 6. 6. 5. 3. 3. 3.]\n [0. 0. 0. 5. 6. 6. 6. 5. 3. 3. 3.]\n [0. 0. 0. 5. 6. 6. 6. 5. 3. 3. 3.]\n [5. 5. 5. 5. 5. 5. 5. 5. 5. 5. 5.]\n [0. 0. 0. 5. 0. 0. 0. 5. 0. 0. 0.]\n [0. 0. 0. 5. 0. 0. 0. 5. 0. 0. 0.]\n [0. 0. 0. 5. 0. 0. 0. 5. 0. 0. 0.]]"}, {"id": "13", "type": "stmt", "val": "return output_grid", "subgraph": null}, {"id": "15", "type": "val", "name": "out", "val": "[[0. 0. 0. 5. 2. 2. 2. 5. 4. 4. 4.]\n [0. 0. 0. 5. 2. 2. 2. 5. 4. 4. 4.]\n [0. 0. 0. 5. 2. 2. 2. 5. 4. 4. 4.]\n [5. 5. 5. 5. 5. 5. 5. 5. 5. 5. 5.]\n [0. 0. 0. 5. 6. 6. 6. 5. 3. 3. 3.]\n [0. 0. 0. 5. 6. 6. 6. 5. 3. 3. 3.]\n [0. 0. 0. 5. 6. 6. 6. 5. 3. 3. 3.]\n [5. 5. 5. 5. 5. 5. 5. 5. 5. 5. 5.]\n [0. 0. 0. 5. 0. 0. 0. 5. 0. 0. 0.]\n [0. 0. 0. 5. 0. 0. 0. 5. 0. 0. 0.]\n [0. 0. 0. 5. 0. 0. 0. 5. 0. 0. 0.]]"}], "edges": [["1", "2"], ["0", "3"], ["3", "4"], ["4", "5"], ["5", "6"], ["6", "7"], ["7", "8"], ["8", "9"], ["2", "9"], ["9", "10"], ["10", "11"], ["11", "12"], ["12", "13"], ["13", "15"]]}