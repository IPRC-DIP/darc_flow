{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 3 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "output_grid = input_grid.copy()", "subgraph": null}, {"id": "2", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 3 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "3", "type": "stmt", "val": "pos_green = get position of green pixel(input_grid)", "subgraph": null}, {"id": "4", "type": "val", "name": "pos_green", "val": "(array([2]), array([3]))"}, {"id": "5", "type": "stmt", "val": "pos_yellow = get position of yellow pixel(input_grid)", "subgraph": null}, {"id": "6", "type": "val", "name": "pos_yellow", "val": "(array([8]), array([3]))"}, {"id": "7", "type": "stmt", "val": "output_grid = This function takes an input grid, the position of the green pixel, and the position of the yellow pixel.                                                           \nIt moves the green pixel one block closer to the yellow pixel, no matter if it is horizontal, diagonal, or vertical.                                                \nmove green to yellow, not yellow to green!                                                           \nArgs:                                                                                                                                                               \ninput_grid: A numpy array representing the input grid.                                                                                                              \npos_green: A tuple (row, column) representing the position of the green pixel.                                                                                      \npos_yellow: A tuple (row, column) representing the position of the yellow pixel.                                                                                    \n                                                                                                                                                                    \nReturns:                                                                                                                                                            \nA numpy array representing the output grid with the green pixel moved one block closer to the yellow pixel.                                                         (output_grid, pos_green, pos_yellow)", "subgraph": null}, {"id": "8", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 3 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "9", "type": "stmt", "val": "return output_grid", "subgraph": null}, {"id": "11", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 3 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0]]"}], "edges": [["0", "1"], ["1", "2"], ["0", "3"], ["3", "4"], ["0", "5"], ["5", "6"], ["6", "7"], ["4", "7"], ["2", "7"], ["7", "8"], ["8", "9"], ["9", "11"]]}