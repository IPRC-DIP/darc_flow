{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [2 2 2 2 1 2 2 2 2 1 2 2 2 2 4 2 2 2 2 4 2 2 2 2 2 2 2 2 2]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [2 2 2 2 1 2 2 2 2 1 2 2 2 2 4 2 2 2 2 4 2 2 2 2 2 2 2 2 2]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [2 2 2 2 8 2 2 2 2 8 2 2 2 2 8 2 2 2 2 8 2 2 2 2 2 2 2 2 2]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [2 2 2 2 8 2 2 2 2 8 2 2 2 2 8 2 2 2 2 8 2 2 2 2 2 2 2 2 2]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "(c, n) = Traverse through the first row, and when encountering the first non-black pixel, stop and record its color as c. Also, mark the current index as n (where n represents the spacing between lines).(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "c", "val": "2"}, {"id": "3", "type": "val", "name": "n", "val": "4"}, {"id": "4", "type": "stmt", "val": "for i in range(input_grid.shape[0]):", "subgraph": null}, {"id": "5", "type": "val", "name": "i", "val": "0"}, {"id": "6", "type": "stmt", "val": "for j in range(input_grid.shape[1]):", "subgraph": null}, {"id": "7", "type": "val", "name": "j", "val": "0"}, {"id": "9", "type": "stmt", "val": "for j in range(input_grid.shape[1]):", "subgraph": null}, {"id": "10", "type": "val", "name": "j", "val": "1"}, {"id": "94", "type": "stmt", "val": "for i in range(input_grid.shape[0]):", "subgraph": null}, {"id": "365", "type": "val", "name": "i", "val": "4"}, {"id": "379", "type": "val", "name": "j", "val": "4"}, {"id": "381", "type": "stmt", "val": "c_now = input_grid[i, j]", "subgraph": null}, {"id": "382", "type": "val", "name": "c_now", "val": "1"}, {"id": "384", "type": "stmt", "val": "input_grid = assign the color value of the n*n area with the upper left corner at (i+1,j+1) and lower right corner at (i+n,j+n) to c_now.(input_grid, i, j, n, c_now)", "subgraph": null}, {"id": "385", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [2 2 2 2 1 2 2 2 2 1 2 2 2 2 4 2 2 2 2 4 2 2 2 2 2 2 2 2 2]\n [0 0 0 0 2 1 1 1 1 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 1 1 1 1 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 1 1 1 1 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 1 1 1 1 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [2 2 2 2 1 2 2 2 2 1 2 2 2 2 4 2 2 2 2 4 2 2 2 2 2 2 2 2 2]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [2 2 2 2 8 2 2 2 2 8 2 2 2 2 8 2 2 2 2 8 2 2 2 2 2 2 2 2 2]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [2 2 2 2 8 2 2 2 2 8 2 2 2 2 8 2 2 2 2 8 2 2 2 2 2 2 2 2 2]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]]"}, {"id": "399", "type": "val", "name": "j", "val": "9"}, {"id": "416", "type": "val", "name": "j", "val": "14"}, {"id": "419", "type": "val", "name": "c_now", "val": "4"}, {"id": "421", "type": "stmt", "val": "input_grid = assign the color value of the n*n area with the upper left corner at (i+1,j+1) and lower right corner at (i+n,j+n) to c_now.(input_grid, i, j, n, c_now)", "subgraph": null}, {"id": "1347", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [2 2 2 2 1 2 2 2 2 1 2 2 2 2 4 2 2 2 2 4 2 2 2 2 2 2 2 2 2]\n [0 0 0 0 2 1 1 1 1 2 0 0 0 0 2 4 4 4 4 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 1 1 1 1 2 0 0 0 0 2 4 4 4 4 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 1 1 1 1 2 0 0 0 0 2 4 4 4 4 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 1 1 1 1 2 0 0 0 0 2 4 4 4 4 2 0 0 0 0 2 0 0 0 0]\n [2 2 2 2 1 2 2 2 2 1 2 2 2 2 4 2 2 2 2 4 2 2 2 2 2 2 2 2 2]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [2 2 2 2 8 2 2 2 2 8 2 2 2 2 8 2 2 2 2 8 2 2 2 2 2 2 2 2 2]\n [0 0 0 0 2 8 8 8 8 2 8 8 8 8 2 8 8 8 8 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 8 8 8 8 2 8 8 8 8 2 8 8 8 8 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 8 8 8 8 2 8 8 8 8 2 8 8 8 8 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 8 8 8 8 2 8 8 8 8 2 8 8 8 8 2 0 0 0 0 2 0 0 0 0]\n [2 2 2 2 8 2 2 2 2 8 2 2 2 2 8 2 2 2 2 8 2 2 2 2 2 2 2 2 2]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0 2 0 0 0 0]]"}, {"id": "2572", "type": "val", "name": "i", "val": "28"}, {"id": "2658", "type": "val", "name": "j", "val": "28"}, {"id": "2662", "type": "stmt", "val": "for i in range(0, input_grid.shape[0] - 2 * n - 1, n + 1):", "subgraph": null}, {"id": "2663", "type": "val", "name": "i", "val": "0"}, {"id": "2664", "type": "stmt", "val": "for j in range(0, input_grid.shape[1] - 2 * n - 1, n + 1):", "subgraph": null}, {"id": "2665", "type": "val", "name": "j", "val": "0"}, {"id": "2666", "type": "stmt", "val": "temp_grid = np.zeros((3, 3), dtype=np.int32)", "subgraph": null}, {"id": "2667", "type": "val", "name": "temp_grid", "val": "[[0 0 0]\n [0 0 0]\n [0 0 0]]"}, {"id": "2668", "type": "stmt", "val": "temp_grid = Assign the color of pixel (i,j) to pixel (0,0) in temp_grid. Assign the color of pixel (i,j+n+1) to pixel (0,0) in temp_grid. Assign the color of pixel (i,j+2n+2) to pixel (0,0) in temp_grid. Assign the color of pixel (i+n+1,j) to pixel (0,0) in temp_grid. Assign the color of pixel (i+n+1,j+n+1) to pixel (0,0) in temp_grid. Assign the color of pixel (i+n+1,j+2n+2) to pixel (0,0) in temp_grid. Assign the color of pixel (i+2n+2,j) to pixel (0,0) in temp_grid. Assign the color of pixel (i+2n+2,j+n+1) to pixel (0,0) in temp_grid. Assign the color of pixel (i+2n+2,j+2n+2) to pixel (0,0) in temp_grid.(input_grid, temp_grid, i, j, n)", "subgraph": null}, {"id": "2669", "type": "val", "name": "temp_grid", "val": "[[0 0 0]\n [0 1 0]\n [0 0 0]]"}, {"id": "2671", "type": "stmt", "val": "for j in range(0, input_grid.shape[1] - 2 * n - 1, n + 1):", "subgraph": null}, {"id": "2672", "type": "val", "name": "j", "val": "5"}, {"id": "2673", "type": "stmt", "val": "temp_grid = np.zeros((3, 3), dtype=np.int32)", "subgraph": null}, {"id": "2674", "type": "val", "name": "temp_grid", "val": "[[0 0 0]\n [0 0 0]\n [0 0 0]]"}, {"id": "2675", "type": "stmt", "val": "temp_grid = Assign the color of pixel (i,j) to pixel (0,0) in temp_grid. Assign the color of pixel (i,j+n+1) to pixel (0,0) in temp_grid. Assign the color of pixel (i,j+2n+2) to pixel (0,0) in temp_grid. Assign the color of pixel (i+n+1,j) to pixel (0,0) in temp_grid. Assign the color of pixel (i+n+1,j+n+1) to pixel (0,0) in temp_grid. Assign the color of pixel (i+n+1,j+2n+2) to pixel (0,0) in temp_grid. Assign the color of pixel (i+2n+2,j) to pixel (0,0) in temp_grid. Assign the color of pixel (i+2n+2,j+n+1) to pixel (0,0) in temp_grid. Assign the color of pixel (i+2n+2,j+2n+2) to pixel (0,0) in temp_grid.(input_grid, temp_grid, i, j, n)", "subgraph": null}, {"id": "2676", "type": "val", "name": "temp_grid", "val": "[[0 0 0]\n [1 0 4]\n [0 0 0]]"}, {"id": "2693", "type": "stmt", "val": "for i in range(0, input_grid.shape[0] - 2 * n - 1, n + 1):", "subgraph": null}, {"id": "2707", "type": "val", "name": "temp_grid", "val": "[[1 0 4]\n [0 0 0]\n [8 8 8]]"}, {"id": "2709", "type": "stmt", "val": "return temp_grid", "subgraph": null}, {"id": "2711", "type": "val", "name": "out", "val": "[[1 0 4]\n [0 0 0]\n [8 8 8]]"}], "edges": [["0", "1"], ["1", "2"], ["1", "3"], ["0", "4"], ["4", "5"], ["0", "6"], ["6", "7"], ["0", "9"], ["7", "9"], ["9", "10"], ["5", "94"], ["0", "94"], ["365", "381"], ["0", "381"], ["379", "381"], ["381", "382"], ["382", "384"], ["0", "384"], ["365", "384"], ["3", "384"], ["379", "384"], ["384", "385"], ["419", "421"], ["385", "421"], ["365", "421"], ["3", "421"], ["416", "421"], ["3", "2662"], ["2572", "2662"], ["1347", "2662"], ["2662", "2663"], ["3", "2664"], ["1347", "2664"], ["2658", "2664"], ["2664", "2665"], ["2666", "2667"], ["1347", "2668"], ["2667", "2668"], ["3", "2668"], ["2663", "2668"], ["2665", "2668"], ["2668", "2669"], ["3", "2671"], ["1347", "2671"], ["2665", "2671"], ["2671", "2672"], ["2669", "2673"], ["2673", "2674"], ["1347", "2675"], ["2674", "2675"], ["3", "2675"], ["2663", "2675"], ["2672", "2675"], ["2675", "2676"], ["3", "2693"], ["2663", "2693"], ["1347", "2693"], ["2707", "2709"], ["2709", "2711"]]}