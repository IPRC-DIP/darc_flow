{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 6 6 6 6 0 0 0 0]\n [0 0 0 0 6 0 0 0 0 0 0 0]\n [0 0 6 0 6 0 0 0 0 0 0 0]\n [0 0 6 6 6 6 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "non_black_pixels = np.where(input_grid != black)", "subgraph": null}, {"id": "2", "type": "val", "name": "non_black_pixels", "val": "(array([4, 4, 4, 4, 5, 6, 6, 7, 7, 7, 7]), array([4, 5, 6, 7, 4, 2, 4, 2, 3, 4, 5]))"}, {"id": "3", "type": "stmt", "val": "smallest_rect = find the smallest rectangle that contains these non_black pixels in the input_grid(non_black_pixels, input_grid)", "subgraph": null}, {"id": "4", "type": "val", "name": "smallest_rect", "val": "(4, 2, 8, 8)"}, {"id": "5", "type": "stmt", "val": "output_grid = input_grid[smallest_rect[0]:smallest_rect[2], smallest_rect[1]:smallest_rect[3]]", "subgraph": null}, {"id": "6", "type": "val", "name": "output_grid", "val": "[[0 0 6 6 6 6]\n [0 0 6 0 0 0]\n [6 0 6 0 0 0]\n [6 6 6 6 0 0]]"}, {"id": "7", "type": "stmt", "val": "return output_grid", "subgraph": null}, {"id": "9", "type": "val", "name": "out", "val": "[[0 0 6 6 6 6]\n [0 0 6 0 0 0]\n [6 0 6 0 0 0]\n [6 6 6 6 0 0]]"}], "edges": [["0", "1"], ["1", "2"], ["0", "3"], ["2", "3"], ["3", "4"], ["0", "5"], ["4", "5"], ["5", "6"], ["6", "7"], ["7", "9"]]}