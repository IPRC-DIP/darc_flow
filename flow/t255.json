{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [2 2 2 2 2 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "(r, l) = the input is a 2D numpy array, find the index and length of red horizatal line in the grid, the line may not use all pixels in the same row.(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "r", "val": "2"}, {"id": "3", "type": "val", "name": "l", "val": "5"}, {"id": "4", "type": "stmt", "val": "above = color the rows above r in green, starting from r-1 to the top, the length in each row above should be 1 more than the row below it, return the grid, the length in a row means the first length pixels in the row(r, l, input_grid)", "subgraph": null}, {"id": "6", "type": "val", "name": "above", "val": "[[3 3 3 3 3 3 3 0 0]\n [3 3 3 3 3 3 0 0 0]\n [2 2 2 2 2 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]]"}, {"id": "7", "type": "stmt", "val": "out = color the rows below r in blue, the length of line in the row next to r and below r should 1 less than l, then the length in each row below should be 1 less than the row above it, return the grid, the length in a row means the first length pixels in the row, stop if the length equals to 0(r, l, above)", "subgraph": null}, {"id": "10", "type": "val", "name": "out", "val": "[[3 3 3 3 3 3 3 0 0]\n [3 3 3 3 3 3 0 0 0]\n [2 2 2 2 2 0 0 0 0]\n [1 1 1 1 0 0 0 0 0]\n [1 1 1 0 0 0 0 0 0]\n [1 1 0 0 0 0 0 0 0]\n [1 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]]"}, {"id": "11", "type": "stmt", "val": "return out", "subgraph": null}, {"id": "12", "type": "val", "name": "out", "val": "[[3 3 3 3 3 3 3 0 0]\n [3 3 3 3 3 3 0 0 0]\n [2 2 2 2 2 0 0 0 0]\n [1 1 1 1 0 0 0 0 0]\n [1 1 1 0 0 0 0 0 0]\n [1 1 0 0 0 0 0 0 0]\n [1 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0]]"}], "edges": [["0", "1"], ["1", "2"], ["1", "3"], ["2", "4"], ["0", "4"], ["3", "4"], ["4", "6"], ["2", "7"], ["6", "7"], ["3", "7"], ["7", "10"], ["10", "11"], ["11", "12"]]}