{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 2 2]\n [0 0 0 0 0 0 0 0 2 2]\n [0 1 1 0 0 0 0 2 0 0]\n [0 1 1 0 0 0 0 0 0 0]\n [1 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 4 4 0 0 0 0]\n [0 0 0 0 4 4 0 0 0 0]\n [0 0 0 4 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "(red_x1, red_x2, blue_x1, blue_x2, yellow_x1, yellow_x2) = Traverse the matrix from top to bottom and find the first and last row numbers where the red block appears (denoted as red_x1 and red_x2), the first and last row numbers where the blue block appears (denoted as blue_x1 and blue_x2), and the first and last row numbers where the yellow block appears (denoted as yellow_x1 and yellow_x2).(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "red_x1", "val": "0"}, {"id": "3", "type": "val", "name": "red_x2", "val": "2"}, {"id": "4", "type": "val", "name": "blue_x1", "val": "2"}, {"id": "5", "type": "val", "name": "blue_x2", "val": "4"}, {"id": "6", "type": "val", "name": "yellow_x1", "val": "5"}, {"id": "7", "type": "val", "name": "yellow_x2", "val": "7"}, {"id": "8", "type": "stmt", "val": "(red_y1, red_y2, blue_y1, blue_y2, yellow_y1, yellow_y2) = Traverse the matrix from left to right and find the first and last column numbers where the red block appears (denoted as red_y1 and red_y2), the first and last column numbers where the blue block appears (denoted as blue_y1 and blue_y2), and the first and last column numbers where the yellow block appears (denoted as yellow_y1 and yellow_y2).(input_grid)", "subgraph": null}, {"id": "9", "type": "val", "name": "red_y1", "val": "7"}, {"id": "10", "type": "val", "name": "red_y2", "val": "9"}, {"id": "11", "type": "val", "name": "blue_y1", "val": "0"}, {"id": "12", "type": "val", "name": "blue_y2", "val": "2"}, {"id": "13", "type": "val", "name": "yellow_y1", "val": "3"}, {"id": "14", "type": "val", "name": "yellow_y2", "val": "5"}, {"id": "15", "type": "stmt", "val": "(red_grid, blue_grid, yellow_grid) = In the input_grid, extract the image located in the rectangle with the upper-left corner at (red_x1,red_y1) and the lower-right corner at (red_x2,red_y2) (denoted as red_grid), the image located in the rectangle with the upper-left corner at (blue_x1,blue_y1) and the lower-right corner at (blue_x2,blue_y2) (denoted as blue_grid), and the image located in the rectangle with the upper-left corner at (yellow_x1,yellow_y1) and the lower-right corner at (yellow_x2,yellow_y2) (denoted as yellow_grid).(input_grid, red_x1, red_x2, red_y1, red_y2, blue_x1, blue_x2, blue_y1, blue_y2, yellow_x1, yellow_x2, yellow_y1, yellow_y2)", "subgraph": null}, {"id": "16", "type": "val", "name": "red_grid", "val": "[[0 2 2]\n [0 2 2]\n [2 0 0]]"}, {"id": "17", "type": "val", "name": "blue_grid", "val": "[[0 1 1]\n [0 1 1]\n [1 0 0]]"}, {"id": "18", "type": "val", "name": "yellow_grid", "val": "[[0 4 4]\n [0 4 4]\n [4 0 0]]"}, {"id": "19", "type": "stmt", "val": "output_grid = Create a new image matrix of the same size as the original image, filled with black pixels (denoted as output_grid).(input_grid)", "subgraph": null}, {"id": "20", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "21", "type": "stmt", "val": "output_grid = Overlay blue_grid onto output_grid starting from the location (blue_x1,blue_y1), overlay red_grid onto output_grid starting from the location (blue_x1,red_y1), and overlay yellow_grid onto output_grid starting from the location (blue_x1,yellow_y1).(output_grid, red_grid, blue_grid, yellow_grid, blue_x1, blue_y1, red_y1, yellow_y1)", "subgraph": null}, {"id": "22", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 1 1 0 4 4 0 0 2 2]\n [0 1 1 0 4 4 0 0 2 2]\n [1 0 0 4 0 0 0 2 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "23", "type": "stmt", "val": "return output_grid", "subgraph": null}, {"id": "25", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 1 1 0 4 4 0 0 2 2]\n [0 1 1 0 4 4 0 0 2 2]\n [1 0 0 4 0 0 0 2 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}], "edges": [["0", "1"], ["1", "2"], ["1", "3"], ["1", "4"], ["1", "5"], ["1", "6"], ["1", "7"], ["0", "8"], ["8", "9"], ["8", "10"], ["8", "11"], ["8", "12"], ["8", "13"], ["8", "14"], ["2", "15"], ["6", "15"], ["14", "15"], ["4", "15"], ["13", "15"], ["0", "15"], ["5", "15"], ["10", "15"], ["11", "15"], ["12", "15"], ["7", "15"], ["9", "15"], ["3", "15"], ["15", "16"], ["15", "17"], ["15", "18"], ["0", "19"], ["19", "20"], ["4", "21"], ["17", "21"], ["13", "21"], ["16", "21"], ["18", "21"], ["11", "21"], ["9", "21"], ["20", "21"], ["21", "22"], ["22", "23"], ["23", "25"]]}