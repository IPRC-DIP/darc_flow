{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 1 1 1 1 1]\n [2 2 2 2 0 4 4 4 0 0 1 1 1 1 1]\n [2 2 2 2 0 4 4 4 0 0 1 1 1 1 1]]"}, {"id": "1", "type": "stmt", "val": "output_grid = np.copy(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 1 1 1 1 1]\n [2 2 2 2 0 4 4 4 0 0 1 1 1 1 1]\n [2 2 2 2 0 4 4 4 0 0 1 1 1 1 1]]"}, {"id": "3", "type": "stmt", "val": "(red_row, red_column) =  Find the number of rows and columns of the red squares matrix (output_grid)", "subgraph": null}, {"id": "4", "type": "val", "name": "red_row", "val": "7"}, {"id": "6", "type": "stmt", "val": "(yellow_row, yellow_column) =  Find the number of rows and columns of the yellow squares matrix (output_grid)", "subgraph": null}, {"id": "7", "type": "val", "name": "yellow_row", "val": "6"}, {"id": "9", "type": "stmt", "val": "(blue_row, blue_column) =  Find the number of rows and columns of the blue squares matrix (output_grid)", "subgraph": null}, {"id": "10", "type": "val", "name": "blue_row", "val": "3"}, {"id": "12", "type": "stmt", "val": "output_grid =  Move up the red squares matrix as a whole by the number of the input(output_grid, red_row)", "subgraph": null}, {"id": "13", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 4 4 4 0 0 0 0 0 0 0]\n [0 0 0 0 0 4 4 4 0 0 0 0 0 0 0]\n [0 0 0 0 0 4 4 4 0 0 0 0 0 0 0]\n [0 0 0 0 0 4 4 4 0 0 1 1 1 1 1]\n [0 0 0 0 0 4 4 4 0 0 1 1 1 1 1]\n [0 0 0 0 0 4 4 4 0 0 1 1 1 1 1]]"}, {"id": "14", "type": "stmt", "val": "output_grid =  Move up the yellow squares matrix as a whole by the number of the input(output_grid, yellow_row)", "subgraph": null}, {"id": "15", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [0 0 0 0 0 4 4 4 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 1 1 1 1 1]\n [0 0 0 0 0 0 0 0 0 0 1 1 1 1 1]\n [0 0 0 0 0 0 0 0 0 0 1 1 1 1 1]]"}, {"id": "16", "type": "stmt", "val": "output_grid =  Move up the blue squares matrix as a whole by the number of the input(output_grid, blue_row)", "subgraph": null}, {"id": "17", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [0 0 0 0 0 4 4 4 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 1 1 1 1 1]\n [0 0 0 0 0 0 0 0 0 0 1 1 1 1 1]\n [0 0 0 0 0 0 0 0 0 0 1 1 1 1 1]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "19", "type": "stmt", "val": "return output_grid", "subgraph": null}, {"id": "21", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 0 0 0 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [2 2 2 2 0 4 4 4 0 0 0 0 0 0 0]\n [0 0 0 0 0 4 4 4 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 1 1 1 1 1]\n [0 0 0 0 0 0 0 0 0 0 1 1 1 1 1]\n [0 0 0 0 0 0 0 0 0 0 1 1 1 1 1]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["3", "4"], ["2", "6"], ["6", "7"], ["2", "9"], ["9", "10"], ["2", "12"], ["4", "12"], ["12", "13"], ["13", "14"], ["7", "14"], ["14", "15"], ["10", "16"], ["15", "16"], ["16", "17"], ["17", "19"], ["19", "21"]]}