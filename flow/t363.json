{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 3 0 3 0 0 0 0 0 0 0 0 3 0 0 0]\n [0 3 0 3 0 0 0 0 0 0 0 0 3 0 0 0]\n [0 3 3 3 0 0 0 0 0 0 0 0 3 3 3 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 3 0 3 0]\n [0 0 0 0 0 0 3 3 0 0 0 0 0 0 3 0]\n [0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0]\n [0 0 0 3 3 3 3 3 0 0 3 3 3 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 3 0 0 0]\n [0 0 0 0 0 0 0 0 0 3 3 3 3 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 3 0 0 0 0]\n [0 3 3 3 3 3 3 0 0 0 0 3 0 0 0 0]\n [0 0 0 0 0 0 3 0 0 0 0 3 3 3 0 0]\n [0 0 0 0 0 0 3 0 0 0 0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "p = find all green patterns, a pattern is some connected pixels in same color(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "p", "val": "[[(0, 1), (1, 1), (2, 1), (2, 2), (2, 3), (1, 3), (0, 3)], [(0, 12), (1, 12), (2, 12), (3, 12), (2, 13), (2, 14), (3, 14), (4, 14)], [(4, 6), (5, 6), (6, 6), (6, 5), (6, 4), (6, 3), (6, 7), (4, 7)], [(6, 10), (6, 11), (6, 12), (7, 12), (8, 12), (8, 11), (8, 10), (8, 9)], [(10, 11), (11, 11), (12, 11), (12, 12), (12, 13)], [(11, 1), (11, 2), (11, 3), (11, 4), (11, 5), (11, 6), (12, 6), (13, 6)]]"}, {"id": "3", "type": "stmt", "val": "record = For every pattern in patterns, count how many 90 degree sides in it by traversing pixels in the pattern, a 90 degree sides means if 2 adjacent neighbors of a pixels are both in the pattern but the pixel along the diagonal direction and adjacent to the 2 neighbors is not in the pattern, for example, the left and top is in pattern and the left top pixel along the diagonal direction is not.(p, input_grid)", "subgraph": null}, {"id": "4", "type": "val", "name": "record", "val": "{0: 2, 1: 3, 2: 3, 3: 2, 4: 1, 5: 1}"}, {"id": "5", "type": "stmt", "val": "out = For every pattern in p, if its record is 1 turn it to blue, if 2 to pink, if 3 to red. return the grid(p, record, input_grid)", "subgraph": null}, {"id": "7", "type": "val", "name": "out", "val": "[[0 6 0 6 0 0 0 0 0 0 0 0 2 0 0 0]\n [0 6 0 6 0 0 0 0 0 0 0 0 2 0 0 0]\n [0 6 6 6 0 0 0 0 0 0 0 0 2 2 2 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 0]\n [0 0 0 0 0 0 2 2 0 0 0 0 0 0 2 0]\n [0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0]\n [0 0 0 2 2 2 2 2 0 0 6 6 6 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0]\n [0 0 0 0 0 0 0 0 0 6 6 6 6 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]\n [0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0]\n [0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0]\n [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]]"}, {"id": "8", "type": "stmt", "val": "return out", "subgraph": null}, {"id": "9", "type": "val", "name": "out", "val": "[[0 6 0 6 0 0 0 0 0 0 0 0 2 0 0 0]\n [0 6 0 6 0 0 0 0 0 0 0 0 2 0 0 0]\n [0 6 6 6 0 0 0 0 0 0 0 0 2 2 2 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 2 0 2 0]\n [0 0 0 0 0 0 2 2 0 0 0 0 0 0 2 0]\n [0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 0]\n [0 0 0 2 2 2 2 2 0 0 6 6 6 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 6 0 0 0]\n [0 0 0 0 0 0 0 0 0 6 6 6 6 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0]\n [0 1 1 1 1 1 1 0 0 0 0 1 0 0 0 0]\n [0 0 0 0 0 0 1 0 0 0 0 1 1 1 0 0]\n [0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0]]"}], "edges": [["0", "1"], ["1", "2"], ["0", "3"], ["2", "3"], ["3", "4"], ["2", "5"], ["4", "5"], ["0", "5"], ["5", "7"], ["7", "8"], ["8", "9"]]}