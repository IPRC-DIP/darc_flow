{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 2 2 2 2 2 0 0]\n [0 0 2 0 0 0 2 0 0]\n [0 0 2 0 0 0 2 0 0]\n [2 2 2 2 2 2 2 0 0]\n [2 0 0 0 2 0 0 0 0]\n [2 0 2 0 2 0 0 0 0]\n [2 0 0 0 2 2 2 2 2]\n [2 2 2 2 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "output_grid = input_grid.copy()", "subgraph": null}, {"id": "2", "type": "val", "name": "output_grid", "val": "[[0 0 2 2 2 2 2 0 0]\n [0 0 2 0 0 0 2 0 0]\n [0 0 2 0 0 0 2 0 0]\n [2 2 2 2 2 2 2 0 0]\n [2 0 0 0 2 0 0 0 0]\n [2 0 2 0 2 0 0 0 0]\n [2 0 0 0 2 2 2 2 2]\n [2 2 2 2 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0]]"}, {"id": "3", "type": "stmt", "val": "for row in range(output_grid.shape[0]):", "subgraph": null}, {"id": "4", "type": "val", "name": "row", "val": "0"}, {"id": "5", "type": "stmt", "val": "for col in range(output_grid.shape[1]):", "subgraph": null}, {"id": "6", "type": "val", "name": "col", "val": "0"}, {"id": "8", "type": "stmt", "val": "have_pixels_left_right = from this pixel, go left and right if meet one red pixel on left, and one red pixel on right(row, col, output_grid)", "subgraph": null}, {"id": "9", "type": "val", "name": "have_pixels_left_right", "val": "(False, True)"}, {"id": "10", "type": "stmt", "val": "have_pixels_up_down = from this pixel, go up and down if meet one red pixel up, and one red pixel down(row, col, output_grid)", "subgraph": null}, {"id": "11", "type": "val", "name": "have_pixels_up_down", "val": "(False, True)"}, {"id": "13", "type": "stmt", "val": "for col in range(output_grid.shape[1]):", "subgraph": null}, {"id": "14", "type": "val", "name": "col", "val": "1"}, {"id": "48", "type": "stmt", "val": "for row in range(output_grid.shape[0]):", "subgraph": null}, {"id": "49", "type": "val", "name": "row", "val": "1"}, {"id": "67", "type": "val", "name": "col", "val": "3"}, {"id": "74", "type": "stmt", "val": "output_grid[row][col] = blue", "subgraph": null}, {"id": "75", "type": "val", "name": "output_grid", "val": "[[0 0 2 2 2 2 2 0 0]\n [0 0 2 1 0 0 2 0 0]\n [0 0 2 0 0 0 2 0 0]\n [2 2 2 2 2 2 2 0 0]\n [2 0 0 0 2 0 0 0 0]\n [2 0 2 0 2 0 0 0 0]\n [2 0 0 0 2 2 2 2 2]\n [2 2 2 2 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0]]"}, {"id": "77", "type": "val", "name": "col", "val": "4"}, {"id": "82", "type": "stmt", "val": "output_grid[row][col] = blue", "subgraph": null}, {"id": "355", "type": "val", "name": "output_grid", "val": "[[0 0 2 2 2 2 2 0 0]\n [0 0 2 1 1 1 2 0 0]\n [0 0 2 1 1 1 2 0 0]\n [2 2 2 2 2 2 2 0 0]\n [2 1 1 1 2 0 0 0 0]\n [2 1 2 1 2 0 0 0 0]\n [2 1 1 1 2 2 2 2 2]\n [2 2 2 2 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0]]"}, {"id": "473", "type": "stmt", "val": "return output_grid", "subgraph": null}, {"id": "475", "type": "val", "name": "out", "val": "[[0 0 2 2 2 2 2 0 0]\n [0 0 2 1 1 1 2 0 0]\n [0 0 2 1 1 1 2 0 0]\n [2 2 2 2 2 2 2 0 0]\n [2 1 1 1 2 0 0 0 0]\n [2 1 2 1 2 0 0 0 0]\n [2 1 1 1 2 2 2 2 2]\n [2 2 2 2 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0]]"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["3", "4"], ["2", "5"], ["5", "6"], ["6", "8"], ["2", "8"], ["4", "8"], ["8", "9"], ["6", "10"], ["2", "10"], ["4", "10"], ["10", "11"], ["2", "13"], ["6", "13"], ["13", "14"], ["2", "48"], ["4", "48"], ["48", "49"], ["67", "74"], ["2", "74"], ["49", "74"], ["74", "75"], ["77", "82"], ["75", "82"], ["49", "82"], ["355", "473"], ["473", "475"]]}