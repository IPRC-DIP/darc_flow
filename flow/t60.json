{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 1 1]\n [1 2 3 4 5 6 7 8 9 1 2 3 4 0 0 0 8 9]\n [1 3 5 7 9 2 4 6 8 1 3 5 7 0 0 0 6 8]\n [1 4 7 1 4 7 1 4 7 1 4 7 1 4 7 1 4 7]\n [1 5 9 4 8 3 7 2 6 1 5 9 4 8 3 7 2 6]\n [1 6 2 0 0 0 4 9 5 1 6 2 7 0 0 0 9 5]\n [1 7 4 0 0 0 1 7 4 0 0 0 0 0 0 0 7 4]\n [1 8 6 0 0 0 7 5 3 0 0 0 0 2 9 7 5 3]\n [1 9 8 0 0 0 4 3 2 0 0 0 0 6 5 4 3 2]\n [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9]\n [1 3 5 7 9 2 4 6 8 1 3 5 7 9 2 4 6 8]\n [1 4 7 1 4 7 1 4 7 1 4 7 1 4 7 1 4 7]\n [1 0 0 0 8 3 7 2 6 1 5 9 4 8 3 7 2 6]\n [1 0 0 0 3 8 4 9 5 1 6 2 7 3 8 4 9 5]\n [1 0 0 0 7 4 1 7 4 1 7 4 1 7 4 1 7 4]\n [1 0 0 0 2 9 7 5 3 1 8 6 4 2 9 7 5 3]\n [1 9 8 7 6 5 4 3 2 1 9 8 7 6 5 4 3 2]]"}, {"id": "1", "type": "stmt", "val": "(h, w) = Get the height and width of the input image matrix(input_grid)", "subgraph": null}, {"id": "4", "type": "stmt", "val": "d = Traverse the second row of the image matrix and record the distance between the first and second blue pixels as d.(input_grid)", "subgraph": null}, {"id": "5", "type": "val", "name": "d", "val": "8"}, {"id": "6", "type": "stmt", "val": "pattern_grid = Get the pattern_grid as described in Step3.(input_grid, d)", "subgraph": null}, {"id": "7", "type": "val", "name": "pattern_grid", "val": "[[2 3 4 5 6 7 8 9]\n [3 5 7 9 2 4 6 8]\n [4 7 1 4 7 1 4 7]\n [5 9 4 8 3 7 2 6]\n [6 2 7 3 8 4 9 5]\n [7 4 1 7 4 1 7 4]\n [8 6 4 2 9 7 5 3]\n [9 8 7 6 5 4 3 2]]"}, {"id": "8", "type": "stmt", "val": "output_grid = Get the output_grid as described in Step4.(input_grid, pattern_grid, d)", "subgraph": null}, {"id": "10", "type": "val", "name": "output_grid", "val": "[[1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9]\n [1 3 5 7 9 2 4 6 8 1 3 5 7 9 2 4 6 8]\n [1 4 7 1 4 7 1 4 7 1 4 7 1 4 7 1 4 7]\n [1 5 9 4 8 3 7 2 6 1 5 9 4 8 3 7 2 6]\n [1 6 2 7 3 8 4 9 5 1 6 2 7 3 8 4 9 5]\n [1 7 4 1 7 4 1 7 4 1 7 4 1 7 4 1 7 4]\n [1 8 6 4 2 9 7 5 3 1 8 6 4 2 9 7 5 3]\n [1 9 8 7 6 5 4 3 2 1 9 8 7 6 5 4 3 2]\n [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9]\n [1 3 5 7 9 2 4 6 8 1 3 5 7 9 2 4 6 8]\n [1 4 7 1 4 7 1 4 7 1 4 7 1 4 7 1 4 7]\n [1 5 9 4 8 3 7 2 6 1 5 9 4 8 3 7 2 6]\n [1 6 2 7 3 8 4 9 5 1 6 2 7 3 8 4 9 5]\n [1 7 4 1 7 4 1 7 4 1 7 4 1 7 4 1 7 4]\n [1 8 6 4 2 9 7 5 3 1 8 6 4 2 9 7 5 3]\n [1 9 8 7 6 5 4 3 2 1 9 8 7 6 5 4 3 2]]"}, {"id": "11", "type": "stmt", "val": "return output_grid", "subgraph": null}, {"id": "13", "type": "val", "name": "out", "val": "[[1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9]\n [1 3 5 7 9 2 4 6 8 1 3 5 7 9 2 4 6 8]\n [1 4 7 1 4 7 1 4 7 1 4 7 1 4 7 1 4 7]\n [1 5 9 4 8 3 7 2 6 1 5 9 4 8 3 7 2 6]\n [1 6 2 7 3 8 4 9 5 1 6 2 7 3 8 4 9 5]\n [1 7 4 1 7 4 1 7 4 1 7 4 1 7 4 1 7 4]\n [1 8 6 4 2 9 7 5 3 1 8 6 4 2 9 7 5 3]\n [1 9 8 7 6 5 4 3 2 1 9 8 7 6 5 4 3 2]\n [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [1 2 3 4 5 6 7 8 9 1 2 3 4 5 6 7 8 9]\n [1 3 5 7 9 2 4 6 8 1 3 5 7 9 2 4 6 8]\n [1 4 7 1 4 7 1 4 7 1 4 7 1 4 7 1 4 7]\n [1 5 9 4 8 3 7 2 6 1 5 9 4 8 3 7 2 6]\n [1 6 2 7 3 8 4 9 5 1 6 2 7 3 8 4 9 5]\n [1 7 4 1 7 4 1 7 4 1 7 4 1 7 4 1 7 4]\n [1 8 6 4 2 9 7 5 3 1 8 6 4 2 9 7 5 3]\n [1 9 8 7 6 5 4 3 2 1 9 8 7 6 5 4 3 2]]"}], "edges": [["0", "1"], ["0", "4"], ["4", "5"], ["5", "6"], ["0", "6"], ["6", "7"], ["5", "8"], ["0", "8"], ["7", "8"], ["8", "10"], ["10", "11"], ["11", "13"]]}