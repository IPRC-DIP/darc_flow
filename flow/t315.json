{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 5 0 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1]\n [0 2 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 6 0 0]\n [0 0 0 3 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [5 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 4 0 0 0 0]\n [0 0 9 0 0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "color_list = Traverse each column, if there is a non-black pixel in this column, add the color of the pixel to the return list. After the traversal is complete, return the answer list(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "color_list", "val": "[5, 2, 9, 3, 5, 4, 9, 6, 1]"}, {"id": "3", "type": "stmt", "val": "ans_grid = Arrange the pixels in the color_list in order in the 3*3 grid. After the arrangement is completed,  return to the grid(color_list)", "subgraph": null}, {"id": "4", "type": "val", "name": "ans_grid", "val": "[[5 2 9]\n [3 5 4]\n [9 6 1]]"}, {"id": "5", "type": "stmt", "val": "ans_grid[1, :] = ans_grid[1, ::-1]", "subgraph": null}, {"id": "6", "type": "val", "name": "ans_grid", "val": "[[5 2 9]\n [4 5 3]\n [9 6 1]]"}, {"id": "7", "type": "stmt", "val": "return ans_grid", "subgraph": null}, {"id": "9", "type": "val", "name": "out", "val": "[[5 2 9]\n [4 5 3]\n [9 6 1]]"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["3", "4"], ["4", "5"], ["5", "6"], ["6", "7"], ["7", "9"]]}