{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[3 3]\n [3 0]\n [3 3]]"}, {"id": "1", "type": "stmt", "val": "t1 = mirror input symmetry with the left boundary, please use concat function of numpy(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "t1", "val": "[[3 3 3 3]\n [0 3 3 0]\n [3 3 3 3]]"}, {"id": "3", "type": "stmt", "val": "t2 = mirror input with top boundary(t1)", "subgraph": null}, {"id": "4", "type": "val", "name": "t2", "val": "[[3 3 3 3]\n [0 3 3 0]\n [3 3 3 3]]"}, {"id": "5", "type": "stmt", "val": "t3 = concat the three input to a new numpy array in axis 0(t2, t1, t2)", "subgraph": null}, {"id": "6", "type": "val", "name": "t3", "val": "[[3 3 3 3]\n [0 3 3 0]\n [3 3 3 3]\n [3 3 3 3]\n [0 3 3 0]\n [3 3 3 3]\n [3 3 3 3]\n [0 3 3 0]\n [3 3 3 3]]"}, {"id": "7", "type": "stmt", "val": "return t3", "subgraph": null}, {"id": "9", "type": "val", "name": "out", "val": "[[3 3 3 3]\n [0 3 3 0]\n [3 3 3 3]\n [3 3 3 3]\n [0 3 3 0]\n [3 3 3 3]\n [3 3 3 3]\n [0 3 3 0]\n [3 3 3 3]]"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["3", "4"], ["2", "5"], ["4", "5"], ["5", "6"], ["6", "7"], ["7", "9"]]}