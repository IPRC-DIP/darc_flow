{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[8 8 8 8 0 8 8 8 8 8 8 8 8 8 8]\n [8 8 8 8 8 8 8 8 8 8 8 8 8 8 8]\n [8 8 8 8 8 8 8 8 8 8 8 8 0 8 8]\n [8 8 8 8 8 8 8 8 8 8 8 8 8 8 8]\n [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 0 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 0 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]]"}, {"id": "1", "type": "stmt", "val": "output_grid = input_grid.copy()", "subgraph": null}, {"id": "2", "type": "val", "name": "output_grid", "val": "[[8 8 8 8 0 8 8 8 8 8 8 8 8 8 8]\n [8 8 8 8 8 8 8 8 8 8 8 8 8 8 8]\n [8 8 8 8 8 8 8 8 8 8 8 8 0 8 8]\n [8 8 8 8 8 8 8 8 8 8 8 8 8 8 8]\n [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 0 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 0 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]]"}, {"id": "3", "type": "stmt", "val": "num_non_black = find the number of non-black colors in the first row(input_grid)", "subgraph": null}, {"id": "4", "type": "val", "name": "num_non_black", "val": "1"}, {"id": "6", "type": "stmt", "val": "black_pixels_coordinates = find all coordinates of all black pixels in input grid(input_grid)", "subgraph": null}, {"id": "7", "type": "val", "name": "black_pixels_coordinates", "val": "[(0, 4), (2, 12), (6, 6), (10, 10), (15, 1)]"}, {"id": "8", "type": "stmt", "val": "for coordinate in black_pixels_coordinates:", "subgraph": null}, {"id": "9", "type": "val", "name": "coordinate", "val": "(0, 4)"}, {"id": "10", "type": "stmt", "val": "surrounding_colors = find all surrounding colors(input_grid, coordinate)", "subgraph": null}, {"id": "11", "type": "val", "name": "surrounding_colors", "val": "[8, 8, 8, 8, 8]"}, {"id": "12", "type": "stmt", "val": "If the pixel is in the same column of coordinates, and the pixel color is among the surrounding colors, paint it black(output_grid, coordinate, surrounding_colors)", "subgraph": null}, {"id": "13", "type": "val", "name": "output_grid", "val": "[[8 8 8 8 0 8 8 8 8 8 8 8 8 8 8]\n [8 8 8 8 0 8 8 8 8 8 8 8 8 8 8]\n [8 8 8 8 0 8 8 8 8 8 8 8 0 8 8]\n [8 8 8 8 0 8 8 8 8 8 8 8 8 8 8]\n [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 0 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 0 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]]"}, {"id": "14", "type": "val", "name": "surrounding_colors", "val": "[8, 8, 8, 8]"}, {"id": "15", "type": "stmt", "val": "for coordinate in black_pixels_coordinates:", "subgraph": null}, {"id": "16", "type": "val", "name": "coordinate", "val": "(2, 12)"}, {"id": "17", "type": "stmt", "val": "surrounding_colors = find all surrounding colors(input_grid, coordinate)", "subgraph": null}, {"id": "18", "type": "val", "name": "surrounding_colors", "val": "[8, 8, 8, 8, 8, 8, 8, 8]"}, {"id": "19", "type": "stmt", "val": "If the pixel is in the same column of coordinates, and the pixel color is among the surrounding colors, paint it black(output_grid, coordinate, surrounding_colors)", "subgraph": null}, {"id": "41", "type": "val", "name": "output_grid", "val": "[[8 8 8 8 0 8 8 8 8 8 8 8 0 8 8]\n [8 8 8 8 0 8 8 8 8 8 8 8 0 8 8]\n [8 8 8 8 0 8 8 8 8 8 8 8 0 8 8]\n [8 8 8 8 0 8 8 8 8 8 8 8 0 8 8]\n [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]\n [4 4 4 4 4 4 4 4 4 4 0 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 0 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 0 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 0 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 0 4 4 4 4]\n [2 0 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 0 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 0 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 0 2 2 2 2 2 2 2 2 2 2 2 2 2]]"}, {"id": "45", "type": "stmt", "val": "return output_grid", "subgraph": null}, {"id": "47", "type": "val", "name": "out", "val": "[[8 8 8 8 0 8 8 8 8 8 8 8 0 8 8]\n [8 8 8 8 0 8 8 8 8 8 8 8 0 8 8]\n [8 8 8 8 0 8 8 8 8 8 8 8 0 8 8]\n [8 8 8 8 0 8 8 8 8 8 8 8 0 8 8]\n [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 0 1 1 1 1 1 1 1 1]\n [4 4 4 4 4 4 4 4 4 4 0 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 0 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 0 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 0 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 0 4 4 4 4]\n [2 0 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 0 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 0 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 0 2 2 2 2 2 2 2 2 2 2 2 2 2]]"}], "edges": [["0", "1"], ["1", "2"], ["0", "3"], ["3", "4"], ["0", "6"], ["6", "7"], ["7", "8"], ["8", "9"], ["9", "10"], ["0", "10"], ["10", "11"], ["9", "12"], ["11", "12"], ["2", "12"], ["12", "13"], ["12", "14"], ["9", "15"], ["7", "15"], ["15", "16"], ["16", "17"], ["14", "17"], ["0", "17"], ["17", "18"], ["16", "19"], ["18", "19"], ["13", "19"], ["41", "45"], ["45", "47"]]}