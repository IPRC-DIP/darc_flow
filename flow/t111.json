{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 2 2 2 2 0 0 0 0 0 0 0 0]\n [0 0 0 2 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 2 2 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 3 3 0 0 0 0 0 0]\n [0 0 0 0 0 0 3 3 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "(red_pixels, green_pixels) = find all the red pixels and green pixels in the input_grid(input_grid)", "subgraph": null}, {"id": "3", "type": "val", "name": "green_pixels", "val": "(array([6, 6, 7, 7]), array([6, 7, 6, 7]))"}, {"id": "4", "type": "stmt", "val": "(mean_x, mean_y) = calculate the mean of all the green pixels(green_pixels)", "subgraph": null}, {"id": "5", "type": "val", "name": "mean_x", "val": "6.5"}, {"id": "6", "type": "val", "name": "mean_y", "val": "6.5"}, {"id": "7", "type": "stmt", "val": "output_grid = input_grid.copy()", "subgraph": null}, {"id": "8", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 2 2 2 2 0 0 0 0 0 0 0 0]\n [0 0 0 2 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 2 2 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 3 3 0 0 0 0 0 0]\n [0 0 0 0 0 0 3 3 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "9", "type": "stmt", "val": "output_grid = Take the x=mean_x Left-right symmetry as the axis of symmetry and Symmetric all red pixels(output_grid, mean_x)", "subgraph": null}, {"id": "10", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 2 2 2 2 0 0 2 2 2 2 0 0]\n [0 0 0 2 0 0 0 0 0 0 2 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 2 0 0 2 2 0 0 0 0]\n [0 0 0 0 0 0 3 3 0 0 0 0 0 0]\n [0 0 0 0 0 0 3 3 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "11", "type": "stmt", "val": "output_grid = Take the x=mean_x Left-right symmetry as the axis of symmetry and Symmetric all red pixels_y_axis(output_grid, mean_y)", "subgraph": null}, {"id": "12", "type": "val", "name": "output_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 2 2 2 2 0 0 2 2 2 2 0 0]\n [0 0 0 2 0 0 0 0 0 0 2 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 2 0 0 2 2 0 0 0 0]\n [0 0 0 0 0 0 3 3 0 0 0 0 0 0]\n [0 0 0 0 0 0 3 3 0 0 0 0 0 0]\n [0 0 0 0 2 2 0 0 2 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 2 0 0 0 0 0 0 2 0 0 0]\n [0 0 2 2 2 2 0 0 2 2 2 2 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "13", "type": "stmt", "val": "return output_grid", "subgraph": null}, {"id": "15", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 2 2 2 2 0 0 2 2 2 2 0 0]\n [0 0 0 2 0 0 0 0 0 0 2 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 0 2 2 0 0 2 2 0 0 0 0]\n [0 0 0 0 0 0 3 3 0 0 0 0 0 0]\n [0 0 0 0 0 0 3 3 0 0 0 0 0 0]\n [0 0 0 0 2 2 0 0 2 2 0 0 0 0]\n [0 0 0 0 2 0 0 0 0 2 0 0 0 0]\n [0 0 0 2 0 0 0 0 0 0 2 0 0 0]\n [0 0 2 2 2 2 0 0 2 2 2 2 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0]]"}], "edges": [["0", "1"], ["1", "3"], ["3", "4"], ["4", "5"], ["4", "6"], ["0", "7"], ["7", "8"], ["5", "9"], ["8", "9"], ["9", "10"], ["10", "11"], ["6", "11"], ["11", "12"], ["12", "13"], ["13", "15"]]}