{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 8 0 0 0 0]\n [0 0 0 4 4 8 4 0 0 0]\n [0 0 8 8 3 3 4 0 0 0]\n [0 0 0 4 3 3 8 8 0 0]\n [0 0 0 4 8 4 4 0 0 0]\n [0 0 0 0 8 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "smallest_row =  finf the smallest numbers of row of not-black point in input_grid(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "smallest_row", "val": "2"}, {"id": "3", "type": "stmt", "val": "smallest_col = you get a 10*10 grid with different color. You should find all non-black point and get the smallest number of col(input_grid)", "subgraph": null}, {"id": "4", "type": "val", "name": "smallest_col", "val": "2"}, {"id": "5", "type": "stmt", "val": "inner_grid = cut a 6*6 grid form input_grid in (row,col)(input_grid, smallest_row, smallest_col)", "subgraph": null}, {"id": "6", "type": "val", "name": "inner_grid", "val": "[[0 0 0 8 0 0]\n [0 4 4 8 4 0]\n [8 8 3 3 4 0]\n [0 4 3 3 8 8]\n [0 4 8 4 4 0]\n [0 0 8 0 0 0]]"}, {"id": "7", "type": "stmt", "val": "output = cut a 3*3 grid from top-left in inner_grid(inner_grid)", "subgraph": null}, {"id": "8", "type": "val", "name": "output", "val": "[[0 0 0]\n [0 4 4]\n [8 8 3]]"}, {"id": "9", "type": "stmt", "val": "return output", "subgraph": null}, {"id": "11", "type": "val", "name": "out", "val": "[[0 0 0]\n [0 4 4]\n [8 8 3]]"}], "edges": [["0", "1"], ["1", "2"], ["0", "3"], ["3", "4"], ["4", "5"], ["0", "5"], ["2", "5"], ["5", "6"], ["6", "7"], ["7", "8"], ["8", "9"], ["9", "11"]]}