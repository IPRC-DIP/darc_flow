{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[5 5 0 5 0]\n [0 5 0 0 5]\n [0 0 0 0 0]\n [5 5 0 5 5]\n [0 5 0 0 5]]"}, {"id": "1", "type": "stmt", "val": "sub_grid_list = The input grid is 5*5, and the third row and the third column are used as the dividing line to divide the grid into four 2*2 sub-grids, and return a list of four sub-grids(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "sub_grid_list", "val": "[array([[5, 5],\n       [0, 5]]), array([[5, 0],\n       [0, 5]]), array([[5, 5],\n       [0, 5]]), array([[5, 5],\n       [0, 5]])]"}, {"id": "3", "type": "stmt", "val": "count_list = Count the number of non-black blocks in each sub-grid and return the answer list(sub_grid_list)", "subgraph": null}, {"id": "4", "type": "val", "name": "count_list", "val": "[3, 2, 3, 3]"}, {"id": "5", "type": "stmt", "val": "ans_grid = Traversing count_list, if one of the values is different from the other three values, return the subgrid corresponding to the value(sub_grid_list, count_list)", "subgraph": null}, {"id": "6", "type": "val", "name": "ans_grid", "val": "[[5 0]\n [0 5]]"}, {"id": "7", "type": "stmt", "val": "return ans_grid", "subgraph": null}, {"id": "9", "type": "val", "name": "out", "val": "[[5 0]\n [0 5]]"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["3", "4"], ["2", "5"], ["4", "5"], ["5", "6"], ["6", "7"], ["7", "9"]]}