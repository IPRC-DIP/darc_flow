{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 5 5 5 5 0 0 0 0 0]\n [0 5 5 5 5 0 0 0 0 0]\n [0 5 5 5 5 0 0 0 0 0]\n [0 5 5 5 5 0 0 0 0 0]\n [0 5 5 5 5 0 0 0 0 0]\n [0 5 5 5 5 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 5 5 5 5 5 5]\n [0 0 0 0 5 5 5 5 5 5]\n [0 0 0 0 5 5 5 5 5 5]]"}, {"id": "1", "type": "stmt", "val": "grid = padding the grid with black with width 1(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 5 5 5 5 0 0 0 0 0 0]\n [0 0 5 5 5 5 0 0 0 0 0 0]\n [0 0 5 5 5 5 0 0 0 0 0 0]\n [0 0 5 5 5 5 0 0 0 0 0 0]\n [0 0 5 5 5 5 0 0 0 0 0 0]\n [0 0 5 5 5 5 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 5 5 5 5 5 5 0]\n [0 0 0 0 0 5 5 5 5 5 5 0]\n [0 0 0 0 0 5 5 5 5 5 5 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "3", "type": "stmt", "val": "copy_grid = grid.copy()", "subgraph": null}, {"id": "4", "type": "val", "name": "copy_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 5 5 5 5 0 0 0 0 0 0]\n [0 0 5 5 5 5 0 0 0 0 0 0]\n [0 0 5 5 5 5 0 0 0 0 0 0]\n [0 0 5 5 5 5 0 0 0 0 0 0]\n [0 0 5 5 5 5 0 0 0 0 0 0]\n [0 0 5 5 5 5 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 5 5 5 5 5 5 0]\n [0 0 0 0 0 5 5 5 5 5 5 0]\n [0 0 0 0 0 5 5 5 5 5 5 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "5", "type": "stmt", "val": "grid = if a pixel is grey in copy_grid, paint it yellow in grid(copy_grid, grid)", "subgraph": null}, {"id": "6", "type": "val", "name": "grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 4 4 4 4 0 0 0 0 0 0]\n [0 0 4 4 4 4 0 0 0 0 0 0]\n [0 0 4 4 4 4 0 0 0 0 0 0]\n [0 0 4 4 4 4 0 0 0 0 0 0]\n [0 0 4 4 4 4 0 0 0 0 0 0]\n [0 0 4 4 4 4 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 4 4 4 4 4 4 0]\n [0 0 0 0 0 4 4 4 4 4 4 0]\n [0 0 0 0 0 4 4 4 4 4 4 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "7", "type": "stmt", "val": "grid = if a pixel is surrounded by grey pixels in copy grid, paint it red in grid(copy_grid, grid)", "subgraph": null}, {"id": "8", "type": "val", "name": "grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 4 4 4 4 0 0 0 0 0 0]\n [0 0 4 2 2 4 0 0 0 0 0 0]\n [0 0 4 2 2 4 0 0 0 0 0 0]\n [0 0 4 2 2 4 0 0 0 0 0 0]\n [0 0 4 2 2 4 0 0 0 0 0 0]\n [0 0 4 4 4 4 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 4 4 4 4 4 4 0]\n [0 0 0 0 0 4 2 2 2 2 4 0]\n [0 0 0 0 0 4 4 4 4 4 4 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "9", "type": "stmt", "val": "grid = for each grey pixel in copy grid, get its four neighbour: left, right, up, down. If two of them is black, then paint this pixel to blue(copy_grid, grid)", "subgraph": null}, {"id": "10", "type": "val", "name": "grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 1 4 4 1 0 0 0 0 0 0]\n [0 0 4 2 2 4 0 0 0 0 0 0]\n [0 0 4 2 2 4 0 0 0 0 0 0]\n [0 0 4 2 2 4 0 0 0 0 0 0]\n [0 0 4 2 2 4 0 0 0 0 0 0]\n [0 0 1 4 4 1 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 1 4 4 4 4 1 0]\n [0 0 0 0 0 4 2 2 2 2 4 0]\n [0 0 0 0 0 1 4 4 4 4 1 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "11", "type": "stmt", "val": "return grid[1:-1, 1:-1]", "subgraph": null}, {"id": "13", "type": "val", "name": "out", "val": "[[0 1 4 4 1 0 0 0 0 0]\n [0 4 2 2 4 0 0 0 0 0]\n [0 4 2 2 4 0 0 0 0 0]\n [0 4 2 2 4 0 0 0 0 0]\n [0 4 2 2 4 0 0 0 0 0]\n [0 1 4 4 1 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 1 4 4 4 4 1]\n [0 0 0 0 4 2 2 2 2 4]\n [0 0 0 0 1 4 4 4 4 1]]"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["3", "4"], ["2", "5"], ["4", "5"], ["5", "6"], ["6", "7"], ["4", "7"], ["7", "8"], ["8", "9"], ["4", "9"], ["9", "10"], ["10", "11"], ["11", "13"]]}