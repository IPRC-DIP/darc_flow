{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 1 1 1 1 1 1 1 1 1]\n [0 1 0 1 1 1 1 1 0 1]\n [0 1 0 1 0 1 0 1 0 1]\n [0 1 0 1 0 0 0 1 0 1]\n [0 0 0 1 0 0 0 0 2 1]\n [0 0 0 0 0 0 0 0 2 0]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 2 0 0 2 0 0 2 0]\n [0 0 2 0 2 2 0 0 2 0]\n [0 0 2 0 2 2 2 0 2 0]]"}, {"id": "1", "type": "stmt", "val": "output_grid = np.copy(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "output_grid", "val": "[[0 1 1 1 1 1 1 1 1 1]\n [0 1 0 1 1 1 1 1 0 1]\n [0 1 0 1 0 1 0 1 0 1]\n [0 1 0 1 0 0 0 1 0 1]\n [0 0 0 1 0 0 0 0 2 1]\n [0 0 0 0 0 0 0 0 2 0]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 2 0 0 2 0 0 2 0]\n [0 0 2 0 2 2 0 0 2 0]\n [0 0 2 0 2 2 2 0 2 0]]"}, {"id": "3", "type": "stmt", "val": "dict =  Traverse all the columns, find all the columns with red squares, calculate the distance between the first black square and the first red square and generate a dictionary (key is column number,value is distance) (output_grid)", "subgraph": null}, {"id": "4", "type": "val", "name": "dict", "val": "{2: 6, 4: 6, 5: 3, 6: 7, 8: 3}"}, {"id": "5", "type": "stmt", "val": "for kv in dict.items():", "subgraph": null}, {"id": "6", "type": "val", "name": "kv", "val": "(2, 6)"}, {"id": "7", "type": "stmt", "val": "output_grid =  move all the red squares of the input column up by the corresponding distance (output_grid, kv)", "subgraph": null}, {"id": "8", "type": "val", "name": "output_grid", "val": "[[0 1 1 1 1 1 1 1 1 1]\n [0 1 2 1 1 1 1 1 0 1]\n [0 1 2 1 0 1 0 1 0 1]\n [0 1 2 1 0 0 0 1 0 1]\n [0 0 0 1 0 0 0 0 2 1]\n [0 0 0 0 0 0 0 0 2 0]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 2 2 0 0 2 0]\n [0 0 0 0 2 2 2 0 2 0]]"}, {"id": "9", "type": "stmt", "val": "for kv in dict.items():", "subgraph": null}, {"id": "10", "type": "val", "name": "kv", "val": "(4, 6)"}, {"id": "11", "type": "stmt", "val": "output_grid =  move all the red squares of the input column up by the corresponding distance (output_grid, kv)", "subgraph": null}, {"id": "24", "type": "val", "name": "output_grid", "val": "[[0 1 1 1 1 1 1 1 1 1]\n [0 1 2 1 1 1 1 1 2 1]\n [0 1 2 1 2 1 2 1 2 1]\n [0 1 2 1 2 2 0 1 2 1]\n [0 0 0 1 0 2 0 0 2 1]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "26", "type": "stmt", "val": "return output_grid", "subgraph": null}, {"id": "28", "type": "val", "name": "out", "val": "[[0 1 1 1 1 1 1 1 1 1]\n [0 1 2 1 1 1 1 1 2 1]\n [0 1 2 1 2 1 2 1 2 1]\n [0 1 2 1 2 2 0 1 2 1]\n [0 0 0 1 0 2 0 0 2 1]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 0 2 0 0 2 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["3", "4"], ["4", "5"], ["5", "6"], ["6", "7"], ["2", "7"], ["7", "8"], ["6", "9"], ["4", "9"], ["9", "10"], ["10", "11"], ["8", "11"], ["24", "26"], ["26", "28"]]}