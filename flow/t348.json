{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 9 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 9 9 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "out = For each column, if there are maroon pixels, replace all black pixels below maroon pixels with blue(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 9 9 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 9 9 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]]"}, {"id": "3", "type": "stmt", "val": "w = Return the width(out)", "subgraph": null}, {"id": "4", "type": "val", "name": "w", "val": "30"}, {"id": "5", "type": "stmt", "val": "for j in range(w):", "subgraph": null}, {"id": "6", "type": "val", "name": "j", "val": "0"}, {"id": "7", "type": "stmt", "val": "flag = Return whether there are maroon pixels and no green pixels below the maroon pixels in column j(out, j)", "subgraph": null}, {"id": "8", "type": "val", "name": "flag", "val": "False"}, {"id": "10", "type": "stmt", "val": "for j in range(w):", "subgraph": null}, {"id": "11", "type": "val", "name": "j", "val": "1"}, {"id": "23", "type": "val", "name": "j", "val": "4"}, {"id": "27", "type": "stmt", "val": "(r1, r2) = Return the minimun row and maximun row of maroon pixels in column j(out, j)", "subgraph": null}, {"id": "28", "type": "val", "name": "r1", "val": "22"}, {"id": "29", "type": "val", "name": "r2", "val": "23"}, {"id": "30", "type": "stmt", "val": "gap = (r2 - r1 + 1) // 2", "subgraph": null}, {"id": "31", "type": "val", "name": "gap", "val": "1"}, {"id": "32", "type": "stmt", "val": "out = Replace the black and blue pixels of the matrix from row r1-gap to row r2+gap, and from column j-gap to column j+gap+r2-r1 with green(out, r1, r2, j, gap)", "subgraph": null}, {"id": "33", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 9 9 9 9 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 3 3 3 3 0 0 1 1 1 1 0 0 0 1 1 1 1 0 9 9 9 9 9 9 0 0 0]\n [0 0 0 3 9 9 3 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 3 9 9 3 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 3 3 3 3 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]]"}, {"id": "52", "type": "val", "name": "j", "val": "9"}, {"id": "56", "type": "stmt", "val": "(r1, r2) = Return the minimun row and maximun row of maroon pixels in column j(out, j)", "subgraph": null}, {"id": "57", "type": "val", "name": "r1", "val": "7"}, {"id": "58", "type": "val", "name": "r2", "val": "10"}, {"id": "59", "type": "stmt", "val": "gap = (r2 - r1 + 1) // 2", "subgraph": null}, {"id": "60", "type": "val", "name": "gap", "val": "2"}, {"id": "61", "type": "stmt", "val": "out = Replace the black and blue pixels of the matrix from row r1-gap to row r2+gap, and from column j-gap to column j+gap+r2-r1 with green(out, r1, r2, j, gap)", "subgraph": null}, {"id": "127", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 9 9 9 9 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 3 3 3 3 3 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 3 3 3 3 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 3 9 9 3 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 3 9 9 3 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 3 3 3 3 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]]"}, {"id": "162", "type": "stmt", "val": "return out", "subgraph": null}, {"id": "163", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 9 9 9 9 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 3 3 3 3 3 3 3 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 9 9 9 9 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 3 3 3 3 3 3 3 3 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 0 0 0 0 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 3 3 3 3 0 0 1 1 1 1 0 0 0 1 1 3 3 3 9 9 9 9 9 9 3 3 3]\n [0 0 0 3 9 9 3 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 3 9 9 3 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 3 3 3 3 0 0 1 1 1 1 0 0 0 1 1 3 3 3 3 3 3 3 3 3 3 3 3]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]\n [0 0 0 0 1 1 0 0 0 1 1 1 1 0 0 0 1 1 1 1 0 1 1 1 1 1 1 0 0 0]]"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["3", "4"], ["4", "5"], ["5", "6"], ["6", "7"], ["2", "7"], ["7", "8"], ["4", "10"], ["6", "10"], ["10", "11"], ["2", "27"], ["23", "27"], ["27", "28"], ["27", "29"], ["29", "30"], ["28", "30"], ["30", "31"], ["29", "32"], ["28", "32"], ["31", "32"], ["2", "32"], ["23", "32"], ["32", "33"], ["29", "56"], ["28", "56"], ["33", "56"], ["52", "56"], ["56", "57"], ["56", "58"], ["31", "59"], ["58", "59"], ["57", "59"], ["59", "60"], ["58", "61"], ["57", "61"], ["60", "61"], ["33", "61"], ["52", "61"], ["127", "162"], ["162", "163"]]}