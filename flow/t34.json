{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 6 0 2 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [9 0 8 8 8 8 0 0 0 0]\n [0 0 8 8 8 8 0 0 0 7]\n [3 0 8 8 8 8 0 0 0 0]\n [4 0 8 8 8 8 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 6 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "output_grid = np.copy(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "output_grid", "val": "[[0 0 0 6 0 2 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [9 0 8 8 8 8 0 0 0 0]\n [0 0 8 8 8 8 0 0 0 7]\n [3 0 8 8 8 8 0 0 0 0]\n [4 0 8 8 8 8 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 6 0 0 0 0 0]]"}, {"id": "3", "type": "stmt", "val": "for i in range(4):", "subgraph": null}, {"id": "4", "type": "val", "name": "i", "val": "0"}, {"id": "5", "type": "stmt", "val": "first_col = get the first column of the grid(output_grid)", "subgraph": null}, {"id": "6", "type": "val", "name": "first_col", "val": "[0 0 0 9 0 3 4 0 0 0]"}, {"id": "7", "type": "stmt", "val": "list = find the list of tuple that contain non-blacack color and its index in the numpy 1D array(first_col)", "subgraph": null}, {"id": "8", "type": "val", "name": "list", "val": "[(9, 3), (3, 5), (4, 6)]"}, {"id": "9", "type": "stmt", "val": "for (color, row) in list:", "subgraph": null}, {"id": "10", "type": "val", "name": "color", "val": "9"}, {"id": "11", "type": "val", "name": "row", "val": "3"}, {"id": "12", "type": "stmt", "val": "output_grid = fill the leftmost teal block in the corresponding row with the corresponding color in the grid(output_grid, row, color)", "subgraph": null}, {"id": "13", "type": "val", "name": "output_grid", "val": "[[0 0 0 6 0 2 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [9 0 9 8 8 8 0 0 0 0]\n [0 0 8 8 8 8 0 0 0 7]\n [3 0 8 8 8 8 0 0 0 0]\n [4 0 8 8 8 8 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 6 0 0 0 0 0]]"}, {"id": "14", "type": "stmt", "val": "for (color, row) in list:", "subgraph": null}, {"id": "15", "type": "val", "name": "color", "val": "3"}, {"id": "16", "type": "val", "name": "row", "val": "5"}, {"id": "17", "type": "stmt", "val": "output_grid = fill the leftmost teal block in the corresponding row with the corresponding color in the grid(output_grid, row, color)", "subgraph": null}, {"id": "23", "type": "val", "name": "output_grid", "val": "[[0 0 0 6 0 2 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [9 0 9 8 8 8 0 0 0 0]\n [0 0 8 8 8 8 0 0 0 7]\n [3 0 3 8 8 8 0 0 0 0]\n [4 0 4 8 8 8 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 6 0 0 0 0 0]]"}, {"id": "25", "type": "stmt", "val": "output_grid = rotate the grid 90 degrees cllockwise(output_grid)", "subgraph": null}, {"id": "26", "type": "val", "name": "output_grid", "val": "[[0 0 0 4 3 0 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 3 8 9 0 0 0]\n [0 0 0 8 8 8 8 0 0 6]\n [6 0 0 8 8 8 8 0 0 0]\n [0 0 0 8 8 8 8 0 0 2]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 7 0 0 0 0]]"}, {"id": "27", "type": "stmt", "val": "for i in range(4):", "subgraph": null}, {"id": "29", "type": "stmt", "val": "first_col = get the first column of the grid(output_grid)", "subgraph": null}, {"id": "30", "type": "val", "name": "first_col", "val": "[0 0 0 0 6 0 0 0 0 0]"}, {"id": "31", "type": "stmt", "val": "list = find the list of tuple that contain non-blacack color and its index in the numpy 1D array(first_col)", "subgraph": null}, {"id": "37", "type": "val", "name": "output_grid", "val": "[[0 0 0 4 3 0 9 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 3 8 9 0 0 0]\n [0 0 0 8 8 8 8 0 0 6]\n [6 0 0 6 8 8 8 0 0 0]\n [0 0 0 8 8 8 8 0 0 2]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 7 0 0 0 0]]"}, {"id": "39", "type": "stmt", "val": "output_grid = rotate the grid 90 degrees cllockwise(output_grid)", "subgraph": null}, {"id": "73", "type": "val", "name": "output_grid", "val": "[[0 0 0 6 0 2 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [9 0 9 6 8 2 0 0 0 0]\n [0 0 8 8 8 7 0 0 0 7]\n [3 0 3 8 8 8 0 0 0 0]\n [4 0 4 8 6 8 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 6 0 0 0 0 0]]"}, {"id": "75", "type": "stmt", "val": "return output_grid", "subgraph": null}, {"id": "77", "type": "val", "name": "out", "val": "[[0 0 0 6 0 2 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [9 0 9 6 8 2 0 0 0 0]\n [0 0 8 8 8 7 0 0 0 7]\n [3 0 3 8 8 8 0 0 0 0]\n [4 0 4 8 6 8 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 6 0 0 0 0 0]]"}], "edges": [["0", "1"], ["1", "2"], ["3", "4"], ["2", "5"], ["5", "6"], ["6", "7"], ["7", "8"], ["8", "9"], ["9", "10"], ["9", "11"], ["10", "12"], ["2", "12"], ["11", "12"], ["12", "13"], ["8", "14"], ["10", "14"], ["11", "14"], ["14", "15"], ["14", "16"], ["15", "17"], ["13", "17"], ["16", "17"], ["23", "25"], ["25", "26"], ["4", "27"], ["6", "29"], ["26", "29"], ["29", "30"], ["8", "31"], ["30", "31"], ["37", "39"], ["73", "75"], ["75", "77"]]}