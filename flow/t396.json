{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [1 1 0 0 0 0 2 9 0 0]\n [2 1 0 0 0 0 1 6 0 0]\n [0 0 0 4 7 0 0 0 0 0]\n [0 0 0 8 4 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "locs = find all 2*2 pixels which is not in black and get the location(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "locs", "val": "[(1, 0), (1, 6), (3, 3)]"}, {"id": "3", "type": "stmt", "val": "n = get the number of colors in each 2*2 grid(input_grid, locs)", "subgraph": null}, {"id": "4", "type": "val", "name": "n", "val": "[2, 4, 3]"}, {"id": "5", "type": "stmt", "val": "out_grid = for each 2*2 grid, change the n rows * 2 columns pixels to green just under each 2*2 grid in which n is the number of colors(input_grid, locs, n)", "subgraph": null}, {"id": "6", "type": "val", "name": "out_grid", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [1 1 0 0 0 0 2 9 0 0]\n [2 1 0 0 0 0 1 6 0 0]\n [3 3 0 4 7 0 3 3 0 0]\n [3 3 0 8 4 0 3 3 0 0]\n [0 0 0 3 3 0 3 3 0 0]\n [0 0 0 3 3 0 3 3 0 0]\n [0 0 0 3 3 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}, {"id": "7", "type": "stmt", "val": "return out_grid", "subgraph": null}, {"id": "9", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0]\n [1 1 0 0 0 0 2 9 0 0]\n [2 1 0 0 0 0 1 6 0 0]\n [3 3 0 4 7 0 3 3 0 0]\n [3 3 0 8 4 0 3 3 0 0]\n [0 0 0 3 3 0 3 3 0 0]\n [0 0 0 3 3 0 3 3 0 0]\n [0 0 0 3 3 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0]]"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["0", "3"], ["3", "4"], ["2", "5"], ["0", "5"], ["4", "5"], ["5", "6"], ["6", "7"], ["7", "9"]]}