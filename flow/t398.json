{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 2 2 0]\n [2 2 0 2 2 0]\n [2 2 0 0 0 0]\n [0 0 2 2 0 0]\n [0 0 2 2 0 0]\n [0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "cnt = count how many 2x2 red squares there are in the input.return the number(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "cnt", "val": "3"}, {"id": "3", "type": "stmt", "val": "ans_grid = generate a 3*3 black grid, add a single blue square in the top left corner if cnt is one, add two blue squares in top left and top right corners if cnt is two, add three blue squares in top left, top right and center if cnt is three, add four blue squares in top left, top right, center and bottom left if cnt is four and add five blue squares in top left, top right, center, bottom left, and bottom right if cnt is five.(cnt)", "subgraph": null}, {"id": "4", "type": "val", "name": "ans_grid", "val": "[[1 0 1]\n [0 1 0]\n [0 0 0]]"}, {"id": "5", "type": "stmt", "val": "return ans_grid", "subgraph": null}, {"id": "7", "type": "val", "name": "out", "val": "[[1 0 1]\n [0 1 0]\n [0 0 0]]"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["3", "4"], ["4", "5"], ["5", "7"]]}