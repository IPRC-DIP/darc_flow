{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[3 3 3 3 3 0 9 9 9 9]\n [3 0 0 0 3 0 9 0 0 9]\n [3 0 0 0 3 0 9 0 0 9]\n [3 0 0 0 3 0 9 0 0 9]\n [3 0 0 0 3 0 9 0 0 9]\n [3 0 0 0 3 0 9 0 0 9]\n [3 0 0 0 3 0 9 0 0 9]\n [3 0 0 0 3 0 9 0 0 9]\n [3 3 3 3 3 0 9 0 0 9]\n [0 0 0 0 0 0 9 9 9 9]]"}, {"id": "1", "type": "stmt", "val": "color_list = find all not-black color and output a list(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "color_list", "val": "[3, 9]"}, {"id": "3", "type": "stmt", "val": "area_size_list = find the top-left point and the bottom-right point for every color and calculate the area-size(input_grid, color_list)", "subgraph": null}, {"id": "4", "type": "val", "name": "area_size_list", "val": "[(3, 45), (9, 40)]"}, {"id": "5", "type": "stmt", "val": "output = there is a list of tuple. In the tuple, first int is color, second int is the area-size. you should drwa a 2*2 grid Using the color which have biggest area-size(area_size_list)", "subgraph": null}, {"id": "6", "type": "val", "name": "output", "val": "[[3 3]\n [3 3]]"}, {"id": "7", "type": "stmt", "val": "return output", "subgraph": null}, {"id": "9", "type": "val", "name": "out", "val": "[[3 3]\n [3 3]]"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["0", "3"], ["3", "4"], ["4", "5"], ["5", "6"], ["6", "7"], ["7", "9"]]}