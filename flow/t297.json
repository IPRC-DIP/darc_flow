{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[9 9 9 9 9 9]\n [9 0 0 0 0 9]\n [9 0 1 1 0 9]\n [9 0 1 1 0 9]\n [9 0 0 0 0 9]\n [9 9 9 9 9 9]]"}, {"id": "1", "type": "stmt", "val": "color_list = Count the number of pixels of various colors in the entire inputgrid, and return the color list from more to less(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "color_list", "val": "[9, 0, 1]"}, {"id": "3", "type": "stmt", "val": "color_list = Insert the last item in the colorlist before the first item(color_list)", "subgraph": null}, {"id": "4", "type": "val", "name": "color_list", "val": "[1, 9, 0]"}, {"id": "5", "type": "stmt", "val": "ans_grid = Generate a new grid with the same size as the inputgrid. The four edges of the new grid are painted as the first item in the colorlist. The second outer layer of the new grid is painted as the second item in the color_list; the innermost layer (that is, the centermost 2* 2grid) painted as the third item in the colorlist,return the new grid(input_grid, color_list)", "subgraph": null}, {"id": "6", "type": "val", "name": "ans_grid", "val": "[[1 1 1 1 1 1]\n [1 9 9 9 9 1]\n [1 9 0 0 9 1]\n [1 9 0 0 9 1]\n [1 9 9 9 9 1]\n [1 1 1 1 1 1]]"}, {"id": "7", "type": "stmt", "val": "return ans_grid", "subgraph": null}, {"id": "9", "type": "val", "name": "out", "val": "[[1 1 1 1 1 1]\n [1 9 9 9 9 1]\n [1 9 0 0 9 1]\n [1 9 0 0 9 1]\n [1 9 9 9 9 1]\n [1 1 1 1 1 1]]"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["3", "4"], ["4", "5"], ["0", "5"], ["5", "6"], ["6", "7"], ["7", "9"]]}