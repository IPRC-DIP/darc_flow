{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[1 1 1 1 1 8 3 3 3 3 3 8 1 1 1 1 1 8 1 1 1 1 1]\n [1 1 1 1 1 8 3 3 3 3 3 8 1 1 1 1 1 8 1 1 1 1 1]\n [1 1 1 1 1 8 3 3 3 3 3 8 1 1 1 1 1 8 1 1 1 1 1]\n [1 1 1 1 1 8 3 3 3 3 3 8 1 1 1 1 1 8 1 1 1 1 1]\n [1 1 1 1 1 8 3 3 3 3 3 8 1 1 1 1 1 8 1 1 1 1 1]\n [8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8]\n [0 0 0 0 0 8 3 3 3 3 3 8 0 0 0 0 0 8 0 0 0 0 0]\n [0 0 0 0 0 8 3 3 3 3 3 8 0 0 0 0 0 8 0 0 0 0 0]\n [0 0 0 0 0 8 3 3 3 3 3 8 0 0 0 0 0 8 0 0 0 0 0]\n [0 0 0 0 0 8 3 3 3 3 3 8 0 0 0 0 0 8 0 0 0 0 0]\n [0 0 0 0 0 8 3 3 3 3 3 8 0 0 0 0 0 8 0 0 0 0 0]\n [8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8]\n [2 2 2 2 2 8 3 3 3 3 3 8 0 0 0 0 0 8 2 2 2 2 2]\n [2 2 2 2 2 8 3 3 3 3 3 8 0 0 0 0 0 8 2 2 2 2 2]\n [2 2 2 2 2 8 3 3 3 3 3 8 0 0 0 0 0 8 2 2 2 2 2]\n [2 2 2 2 2 8 3 3 3 3 3 8 0 0 0 0 0 8 2 2 2 2 2]\n [2 2 2 2 2 8 3 3 3 3 3 8 0 0 0 0 0 8 2 2 2 2 2]\n [8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8]\n [0 0 0 0 0 8 3 3 3 3 3 8 0 0 0 0 0 8 0 0 0 0 0]\n [0 0 0 0 0 8 3 3 3 3 3 8 0 0 0 0 0 8 0 0 0 0 0]\n [0 0 0 0 0 8 3 3 3 3 3 8 0 0 0 0 0 8 0 0 0 0 0]\n [0 0 0 0 0 8 3 3 3 3 3 8 0 0 0 0 0 8 0 0 0 0 0]\n [0 0 0 0 0 8 3 3 3 3 3 8 0 0 0 0 0 8 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "square_side_length = find the length of small square grids(input_grid[0])", "subgraph": null}, {"id": "2", "type": "val", "name": "square_side_length", "val": "5"}, {"id": "3", "type": "stmt", "val": "output_len = input_grid.shape[0] // square_side_length", "subgraph": null}, {"id": "4", "type": "val", "name": "output_len", "val": "4"}, {"id": "5", "type": "stmt", "val": "output_grid = np.zeros((output_len, output_len), dtype=int)", "subgraph": null}, {"id": "6", "type": "val", "name": "output_grid", "val": "[[0 0 0 0]\n [0 0 0 0]\n [0 0 0 0]\n [0 0 0 0]]"}, {"id": "7", "type": "stmt", "val": "for i in range(output_len):", "subgraph": null}, {"id": "8", "type": "val", "name": "i", "val": "0"}, {"id": "9", "type": "stmt", "val": "for j in range(output_len):", "subgraph": null}, {"id": "10", "type": "val", "name": "j", "val": "0"}, {"id": "11", "type": "stmt", "val": "(x, y) = get the corresponding coordinate in the input grid(i, j, square_side_length)", "subgraph": null}, {"id": "12", "type": "val", "name": "x", "val": "0"}, {"id": "13", "type": "val", "name": "y", "val": "0"}, {"id": "14", "type": "stmt", "val": "output_grid[i][j] = input_grid[x][y]", "subgraph": null}, {"id": "15", "type": "val", "name": "output_grid", "val": "[[1 0 0 0]\n [0 0 0 0]\n [0 0 0 0]\n [0 0 0 0]]"}, {"id": "16", "type": "stmt", "val": "for j in range(output_len):", "subgraph": null}, {"id": "17", "type": "val", "name": "j", "val": "1"}, {"id": "18", "type": "stmt", "val": "(x, y) = get the corresponding coordinate in the input grid(i, j, square_side_length)", "subgraph": null}, {"id": "19", "type": "val", "name": "y", "val": "6"}, {"id": "20", "type": "stmt", "val": "output_grid[i][j] = input_grid[x][y]", "subgraph": null}, {"id": "35", "type": "stmt", "val": "for i in range(output_len):", "subgraph": null}, {"id": "100", "type": "val", "name": "output_grid", "val": "[[1 3 1 1]\n [0 3 0 0]\n [2 3 0 2]\n [0 3 0 0]]"}, {"id": "113", "type": "stmt", "val": "return flip the grid left and right(output_grid)", "subgraph": null}, {"id": "115", "type": "val", "name": "out", "val": "[[1 1 3 1]\n [0 0 3 0]\n [2 0 3 2]\n [0 0 3 0]]"}], "edges": [["0", "1"], ["1", "2"], ["0", "3"], ["2", "3"], ["3", "4"], ["4", "5"], ["5", "6"], ["4", "7"], ["7", "8"], ["4", "9"], ["9", "10"], ["2", "11"], ["8", "11"], ["10", "11"], ["11", "12"], ["11", "13"], ["13", "14"], ["12", "14"], ["0", "14"], ["8", "14"], ["6", "14"], ["10", "14"], ["14", "15"], ["4", "16"], ["10", "16"], ["16", "17"], ["13", "18"], ["12", "18"], ["2", "18"], ["8", "18"], ["17", "18"], ["18", "19"], ["19", "20"], ["12", "20"], ["0", "20"], ["8", "20"], ["15", "20"], ["17", "20"], ["4", "35"], ["8", "35"], ["100", "113"], ["113", "115"]]}