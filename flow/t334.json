{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 2 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 8 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "(x1, y1) = There is a teal pixel, return the row and column of it(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "x1", "val": "8"}, {"id": "3", "type": "val", "name": "y1", "val": "3"}, {"id": "4", "type": "stmt", "val": "(x2, y2) = There is a red pixel, return the row and column of it(input_grid)", "subgraph": null}, {"id": "5", "type": "val", "name": "x2", "val": "2"}, {"id": "6", "type": "val", "name": "y2", "val": "11"}, {"id": "7", "type": "stmt", "val": "(a1, a2) = Return the smaller and larger values in sequence(x1, x2)", "subgraph": null}, {"id": "8", "type": "val", "name": "a1", "val": "2"}, {"id": "9", "type": "val", "name": "a2", "val": "8"}, {"id": "10", "type": "stmt", "val": "(b1, b2) = Return the smaller and larger values in sequence(y1, y2)", "subgraph": null}, {"id": "11", "type": "val", "name": "b1", "val": "3"}, {"id": "12", "type": "val", "name": "b2", "val": "11"}, {"id": "13", "type": "stmt", "val": "out = Replace the black pixels between columns y1 and y2 in row x2 with yellow(input_grid, b1, b2, x2)", "subgraph": null}, {"id": "15", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 4 4 4 4 4 4 4 2 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 8 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "16", "type": "stmt", "val": "out = Replace the black pixels between columns y1 and y2 in row x2 with yellow_in_column(out, a1, a2, y1)", "subgraph": null}, {"id": "18", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 4 4 4 4 4 4 4 2 0]\n [0 0 0 4 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 0 0 0 0 0 0 0 0 0]\n [0 0 0 8 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]]"}, {"id": "19", "type": "stmt", "val": "return out", "subgraph": null}, {"id": "20", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 4 4 4 4 4 4 4 2 0]\n [0 0 0 4 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 0 0 0 0 0 0 0 0 0]\n [0 0 0 4 0 0 0 0 0 0 0 0 0]\n [0 0 0 8 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 0 0 0 0 0 0]]"}], "edges": [["0", "1"], ["1", "2"], ["1", "3"], ["0", "4"], ["4", "5"], ["4", "6"], ["5", "7"], ["2", "7"], ["7", "8"], ["7", "9"], ["6", "10"], ["3", "10"], ["10", "11"], ["10", "12"], ["5", "13"], ["12", "13"], ["11", "13"], ["0", "13"], ["13", "15"], ["8", "16"], ["9", "16"], ["3", "16"], ["15", "16"], ["16", "18"], ["18", "19"], ["19", "20"]]}