{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[3 0 0 1]\n [0 2 2 0]\n [0 2 2 0]\n [3 0 0 3]\n [0 8 8 0]\n [8 8 8 8]\n [8 0 0 8]\n [8 8 8 8]]"}, {"id": "1", "type": "stmt", "val": "(h, w) = Get the height and width of the image matrix, denoted as h and w.(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "h", "val": "8"}, {"id": "3", "type": "val", "name": "w", "val": "4"}, {"id": "4", "type": "stmt", "val": "(grid1, grid2) = If h <w, divide the image matrix into left and right halves, else if h>w, divide the image matrix into up and down halves (both are squares with a size of h*h).(input_grid)", "subgraph": null}, {"id": "5", "type": "val", "name": "grid1", "val": "[[3 0 0 1]\n [0 2 2 0]\n [0 2 2 0]\n [3 0 0 3]]"}, {"id": "6", "type": "val", "name": "grid2", "val": "[[0 8 8 0]\n [8 8 8 8]\n [8 0 0 8]\n [8 8 8 8]]"}, {"id": "8", "type": "stmt", "val": "large_grid = Enlarging grid1 proportionally by h times.(grid1, w)", "subgraph": null}, {"id": "9", "type": "val", "name": "large_grid", "val": "[[3 3 3 3 0 0 0 0 0 0 0 0 1 1 1 1]\n [3 3 3 3 0 0 0 0 0 0 0 0 1 1 1 1]\n [3 3 3 3 0 0 0 0 0 0 0 0 1 1 1 1]\n [3 3 3 3 0 0 0 0 0 0 0 0 1 1 1 1]\n [0 0 0 0 2 2 2 2 2 2 2 2 0 0 0 0]\n [0 0 0 0 2 2 2 2 2 2 2 2 0 0 0 0]\n [0 0 0 0 2 2 2 2 2 2 2 2 0 0 0 0]\n [0 0 0 0 2 2 2 2 2 2 2 2 0 0 0 0]\n [0 0 0 0 2 2 2 2 2 2 2 2 0 0 0 0]\n [0 0 0 0 2 2 2 2 2 2 2 2 0 0 0 0]\n [0 0 0 0 2 2 2 2 2 2 2 2 0 0 0 0]\n [0 0 0 0 2 2 2 2 2 2 2 2 0 0 0 0]\n [3 3 3 3 0 0 0 0 0 0 0 0 3 3 3 3]\n [3 3 3 3 0 0 0 0 0 0 0 0 3 3 3 3]\n [3 3 3 3 0 0 0 0 0 0 0 0 3 3 3 3]\n [3 3 3 3 0 0 0 0 0 0 0 0 3 3 3 3]]"}, {"id": "10", "type": "stmt", "val": "output_grid = Execute Step4 in the task description.(large_grid, w, grid2)", "subgraph": null}, {"id": "12", "type": "val", "name": "output_grid", "val": "[[0 3 3 0 0 0 0 0 0 0 0 0 0 1 1 0]\n [3 3 3 3 0 0 0 0 0 0 0 0 1 1 1 1]\n [3 0 0 3 0 0 0 0 0 0 0 0 1 0 0 1]\n [3 3 3 3 0 0 0 0 0 0 0 0 1 1 1 1]\n [0 0 0 0 0 2 2 0 0 2 2 0 0 0 0 0]\n [0 0 0 0 2 2 2 2 2 2 2 2 0 0 0 0]\n [0 0 0 0 2 0 0 2 2 0 0 2 0 0 0 0]\n [0 0 0 0 2 2 2 2 2 2 2 2 0 0 0 0]\n [0 0 0 0 0 2 2 0 0 2 2 0 0 0 0 0]\n [0 0 0 0 2 2 2 2 2 2 2 2 0 0 0 0]\n [0 0 0 0 2 0 0 2 2 0 0 2 0 0 0 0]\n [0 0 0 0 2 2 2 2 2 2 2 2 0 0 0 0]\n [0 3 3 0 0 0 0 0 0 0 0 0 0 3 3 0]\n [3 3 3 3 0 0 0 0 0 0 0 0 3 3 3 3]\n [3 0 0 3 0 0 0 0 0 0 0 0 3 0 0 3]\n [3 3 3 3 0 0 0 0 0 0 0 0 3 3 3 3]]"}, {"id": "13", "type": "stmt", "val": "return output_grid", "subgraph": null}, {"id": "15", "type": "val", "name": "out", "val": "[[0 3 3 0 0 0 0 0 0 0 0 0 0 1 1 0]\n [3 3 3 3 0 0 0 0 0 0 0 0 1 1 1 1]\n [3 0 0 3 0 0 0 0 0 0 0 0 1 0 0 1]\n [3 3 3 3 0 0 0 0 0 0 0 0 1 1 1 1]\n [0 0 0 0 0 2 2 0 0 2 2 0 0 0 0 0]\n [0 0 0 0 2 2 2 2 2 2 2 2 0 0 0 0]\n [0 0 0 0 2 0 0 2 2 0 0 2 0 0 0 0]\n [0 0 0 0 2 2 2 2 2 2 2 2 0 0 0 0]\n [0 0 0 0 0 2 2 0 0 2 2 0 0 0 0 0]\n [0 0 0 0 2 2 2 2 2 2 2 2 0 0 0 0]\n [0 0 0 0 2 0 0 2 2 0 0 2 0 0 0 0]\n [0 0 0 0 2 2 2 2 2 2 2 2 0 0 0 0]\n [0 3 3 0 0 0 0 0 0 0 0 0 0 3 3 0]\n [3 3 3 3 0 0 0 0 0 0 0 0 3 3 3 3]\n [3 0 0 3 0 0 0 0 0 0 0 0 3 0 0 3]\n [3 3 3 3 0 0 0 0 0 0 0 0 3 3 3 3]]"}], "edges": [["0", "1"], ["1", "2"], ["1", "3"], ["0", "4"], ["4", "5"], ["4", "6"], ["5", "8"], ["3", "8"], ["8", "9"], ["6", "10"], ["3", "10"], ["9", "10"], ["10", "12"], ["12", "13"], ["13", "15"]]}