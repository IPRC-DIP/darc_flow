{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[9 9 0 1 0 9 0]\n [0 9 9 1 0 0 0]\n [9 9 0 1 0 9 0]\n [9 9 9 1 9 0 9]\n [0 9 9 1 0 9 9]]"}, {"id": "1", "type": "stmt", "val": "region1 = input_grid[:, :3]", "subgraph": null}, {"id": "2", "type": "val", "name": "region1", "val": "[[9 9 0]\n [0 9 9]\n [9 9 0]\n [9 9 9]\n [0 9 9]]"}, {"id": "3", "type": "stmt", "val": "region2 = input_grid[:, -3:]", "subgraph": null}, {"id": "4", "type": "val", "name": "region2", "val": "[[0 9 0]\n [0 0 0]\n [0 9 0]\n [9 0 9]\n [0 9 9]]"}, {"id": "5", "type": "stmt", "val": "output_grid = np.zeros((5, 3), dtype=int)", "subgraph": null}, {"id": "6", "type": "val", "name": "output_grid", "val": "[[0 0 0]\n [0 0 0]\n [0 0 0]\n [0 0 0]\n [0 0 0]]"}, {"id": "7", "type": "stmt", "val": "black_pixels = get the black pixels' indice if region1[i, j] and region2[i, j] are both black(region1, region2)", "subgraph": null}, {"id": "8", "type": "val", "name": "black_pixels", "val": "[(0, 2), (1, 0), (2, 2), (4, 0)]"}, {"id": "9", "type": "stmt", "val": "pos = black_pixels", "subgraph": null}, {"id": "10", "type": "val", "name": "pos", "val": "[(0, 2), (1, 0), (2, 2), (4, 0)]"}, {"id": "11", "type": "stmt", "val": "output_grid = change the pos to teal(output_grid, pos)", "subgraph": null}, {"id": "12", "type": "val", "name": "output_grid", "val": "[[0 0 8]\n [8 0 0]\n [0 0 8]\n [0 0 0]\n [8 0 0]]"}, {"id": "13", "type": "stmt", "val": "return output_grid", "subgraph": null}, {"id": "15", "type": "val", "name": "out", "val": "[[0 0 8]\n [8 0 0]\n [0 0 8]\n [0 0 0]\n [8 0 0]]"}], "edges": [["0", "1"], ["1", "2"], ["0", "3"], ["3", "4"], ["5", "6"], ["4", "7"], ["2", "7"], ["7", "8"], ["8", "9"], ["9", "10"], ["10", "11"], ["6", "11"], ["11", "12"], ["12", "13"], ["13", "15"]]}