{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[6 1 1 5 1 1 1 1 1 1 1 1 1 1 1]\n [1 4 1 1 9 1 1 1 1 5 1 1 1 1 1]\n [5 1 1 1 4 1 1 1 1 1 1 1 1 1 1]\n [7 2 2 2 2 6 2 9 2 2 4 2 4 2 2]\n [2 2 9 2 1 2 2 2 3 2 2 8 2 7 2]\n [2 5 2 2 5 6 6 2 2 2 3 2 5 2 2]\n [2 2 2 2 2 2 2 2 2 2 6 2 8 2 2]\n [1 8 8 8 8 8 9 8 8 8 8 8 8 8 8]\n [8 8 8 8 1 8 8 8 8 8 7 8 8 8 9]\n [8 8 8 8 8 8 8 8 8 8 4 8 8 8 8]\n [8 8 8 8 8 8 8 8 5 8 8 8 1 8 8]\n [4 4 4 4 4 4 7 3 4 4 4 4 4 2 4]\n [4 4 7 4 4 4 4 4 4 4 8 4 4 4 4]\n [3 3 1 9 3 3 3 3 3 3 3 3 3 3 3]\n [8 6 3 3 8 3 3 3 3 3 3 3 3 3 3]]"}, {"id": "1", "type": "stmt", "val": "colors = find the color with the most occurrences in each row, return a list of int(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "colors", "val": "[1, 1, 1, 2, 2, 2, 2, 8, 8, 8, 8, 4, 4, 3, 3]"}, {"id": "3", "type": "stmt", "val": "(has_rotate, input_grid) = if the most frequent color in each row occurs less than 50% of the time, rotate the input grid by 90 degrees.(input_grid, colors)", "subgraph": null}, {"id": "4", "type": "val", "name": "has_rotate", "val": "False"}, {"id": "6", "type": "stmt", "val": "output_grid = extend a column to a grid with n(np.array(colors), n=input_grid.shape[1])", "subgraph": null}, {"id": "7", "type": "val", "name": "output_grid", "val": "[[1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [8 8 8 8 8 8 8 8 8 8 8 8 8 8 8]\n [8 8 8 8 8 8 8 8 8 8 8 8 8 8 8]\n [8 8 8 8 8 8 8 8 8 8 8 8 8 8 8]\n [8 8 8 8 8 8 8 8 8 8 8 8 8 8 8]\n [4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]\n [3 3 3 3 3 3 3 3 3 3 3 3 3 3 3]\n [3 3 3 3 3 3 3 3 3 3 3 3 3 3 3]]"}, {"id": "9", "type": "stmt", "val": "return output_grid", "subgraph": null}, {"id": "11", "type": "val", "name": "out", "val": "[[1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [1 1 1 1 1 1 1 1 1 1 1 1 1 1 1]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [2 2 2 2 2 2 2 2 2 2 2 2 2 2 2]\n [8 8 8 8 8 8 8 8 8 8 8 8 8 8 8]\n [8 8 8 8 8 8 8 8 8 8 8 8 8 8 8]\n [8 8 8 8 8 8 8 8 8 8 8 8 8 8 8]\n [8 8 8 8 8 8 8 8 8 8 8 8 8 8 8]\n [4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]\n [4 4 4 4 4 4 4 4 4 4 4 4 4 4 4]\n [3 3 3 3 3 3 3 3 3 3 3 3 3 3 3]\n [3 3 3 3 3 3 3 3 3 3 3 3 3 3 3]]"}], "edges": [["0", "1"], ["1", "2"], ["2", "3"], ["0", "3"], ["3", "4"], ["0", "6"], ["2", "6"], ["6", "7"], ["7", "9"], ["9", "11"]]}