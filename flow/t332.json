{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 2 0 0 0 0 0 0]\n [2 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 2 0 0]\n [6 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 6 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [6 0 3 3 0 0 0 0 0 0]\n [0 0 3 3 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 2 0 0]\n [0 0 0 6 0 6 0 0 0 0]]"}, {"id": "1", "type": "stmt", "val": "(i, j) = find the 2*2 green area in the grid, return its left-up coordinate(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "i", "val": "6"}, {"id": "3", "type": "val", "name": "j", "val": "2"}, {"id": "4", "type": "stmt", "val": "green_square = [(i, j), (i, j + 1), (i + 1, j), (i + 1, j + 1)]", "subgraph": null}, {"id": "5", "type": "val", "name": "green_square", "val": "[(6, 2), (6, 3), (7, 2), (7, 3)]"}, {"id": "6", "type": "stmt", "val": "for corner in green_square:", "subgraph": null}, {"id": "7", "type": "val", "name": "corner", "val": "(6, 2)"}, {"id": "8", "type": "stmt", "val": "if there are non-black points on the row and column the corner is in. color all black points between the non-black point and the green corner with the color the non-black point has(input_grid, corner)", "subgraph": null}, {"id": "9", "type": "val", "name": "input_grid", "val": "[[0 0 0 2 0 0 0 0 0 0]\n [2 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 2 0 0]\n [6 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 6 0 0]\n [0 0 0 0 0 0 0 0 0 0]\n [6 6 3 3 0 0 0 0 0 0]\n [0 0 3 3 0 0 0 0 0 0]\n [0 0 0 0 0 0 0 2 0 0]\n [0 0 0 6 0 6 0 0 0 0]]"}, {"id": "10", "type": "stmt", "val": "for corner in green_square:", "subgraph": null}, {"id": "11", "type": "val", "name": "corner", "val": "(6, 3)"}, {"id": "12", "type": "stmt", "val": "if there are non-black points on the row and column the corner is in. color all black points between the non-black point and the green corner with the color the non-black point has(input_grid, corner)", "subgraph": null}, {"id": "13", "type": "val", "name": "input_grid", "val": "[[0 0 0 2 0 0 0 0 0 0]\n [2 0 0 2 0 0 0 0 0 0]\n [0 0 0 2 0 0 0 2 0 0]\n [6 0 0 2 0 0 0 0 0 0]\n [0 0 0 2 0 0 0 6 0 0]\n [0 0 0 2 0 0 0 0 0 0]\n [6 6 3 3 0 0 0 0 0 0]\n [0 0 3 3 0 0 0 0 0 0]\n [0 0 0 6 0 0 0 2 0 0]\n [0 0 0 6 0 6 0 0 0 0]]"}, {"id": "21", "type": "stmt", "val": "return input_grid", "subgraph": null}, {"id": "23", "type": "val", "name": "out", "val": "[[0 0 0 2 0 0 0 0 0 0]\n [2 0 0 2 0 0 0 0 0 0]\n [0 0 0 2 0 0 0 2 0 0]\n [6 0 0 2 0 0 0 0 0 0]\n [0 0 0 2 0 0 0 6 0 0]\n [0 0 0 2 0 0 0 0 0 0]\n [6 6 3 3 0 0 0 0 0 0]\n [0 0 3 3 0 0 0 0 0 0]\n [0 0 0 6 0 0 0 2 0 0]\n [0 0 0 6 0 6 0 0 0 0]]"}], "edges": [["0", "1"], ["1", "2"], ["1", "3"], ["2", "4"], ["3", "4"], ["4", "5"], ["5", "6"], ["6", "7"], ["7", "8"], ["0", "8"], ["8", "9"], ["5", "10"], ["7", "10"], ["10", "11"], ["11", "12"], ["9", "12"], ["12", "13"], ["13", "21"], ["21", "23"]]}