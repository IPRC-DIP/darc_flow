{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 4 4 3 0 0]\n [4 0 0 3 3 0]\n [0 4 0 3 0 0]]"}, {"id": "1", "type": "stmt", "val": "(sub1, sub2) = split the 3x6 input_grid into two 3x3 grid(input_grid)", "subgraph": null}, {"id": "2", "type": "val", "name": "sub1", "val": "[[0 4 4]\n [4 0 0]\n [0 4 0]]"}, {"id": "3", "type": "val", "name": "sub2", "val": "[[3 0 0]\n [3 3 0]\n [3 0 0]]"}, {"id": "4", "type": "stmt", "val": "new = creat a grid same as sub1(sub1)", "subgraph": null}, {"id": "5", "type": "val", "name": "new", "val": "[[0 4 4]\n [4 0 0]\n [0 4 0]]"}, {"id": "6", "type": "stmt", "val": "copy = copy the not black pixels in sub2 to new at the same position(sub1, sub2, new)", "subgraph": null}, {"id": "10", "type": "val", "name": "copy", "val": "[[3 4 4]\n [3 3 0]\n [3 4 0]]"}, {"id": "11", "type": "stmt", "val": "out = turn all not black pixels in copy to pink(copy)", "subgraph": null}, {"id": "16", "type": "val", "name": "out", "val": "[[6 6 6]\n [6 6 0]\n [6 6 0]]"}, {"id": "17", "type": "stmt", "val": "return out", "subgraph": null}, {"id": "18", "type": "val", "name": "out", "val": "[[6 6 6]\n [6 6 0]\n [6 6 0]]"}], "edges": [["0", "1"], ["1", "2"], ["1", "3"], ["2", "4"], ["4", "5"], ["3", "6"], ["5", "6"], ["2", "6"], ["6", "10"], ["10", "11"], ["11", "16"], ["16", "17"], ["17", "18"]]}