{"nodes": [{"id": "0", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0]\n [0 5 5 5 5 5 0 0 0 0 0 0]\n [0 5 0 0 0 5 0 0 0 0 0 0]\n [0 5 0 0 0 5 0 0 0 0 0 0]\n [0 5 0 0 0 5 0 0 5 5 5 0]\n [0 5 5 5 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 5 5 5 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 5 5 5 5 0 0 0 0]\n [0 0 0 0 5 0 0 5 0 0 0 0]\n [0 0 0 0 5 0 0 5 0 0 0 0]\n [0 0 0 0 5 5 5 5 0 0 0 0]]"}, {"id": "1", "type": "val", "name": "target_list", "val": "[(1, 1, 4), (4, 8, 2), (8, 4, 3)]"}, {"id": "2", "type": "stmt", "val": "for target in target_list:", "subgraph": null}, {"id": "3", "type": "val", "name": "target", "val": "(1, 1, 4)"}, {"id": "4", "type": "stmt", "val": "(x, y, length) = target", "subgraph": null}, {"id": "5", "type": "val", "name": "x", "val": "1"}, {"id": "6", "type": "val", "name": "y", "val": "1"}, {"id": "7", "type": "val", "name": "length", "val": "4"}, {"id": "8", "type": "stmt", "val": "color = color_by_length(length)", "subgraph": "t301_1_1"}, {"id": "9", "type": "val", "name": "color", "val": "8"}, {"id": "10", "type": "stmt", "val": "input_grid = Traversing the anslist in step 1, for each item (x, y, length), the pixel of the inputgrid (x+1, y+1) is the upper left corner, and the shape is the subgrid of (length-1, length-1) Coloring of all pixels: if the length is 2, it will be painted pink; if the length is 3, it will be painted orange; if the length is 4, it will be painted as teal(input_grid, x + 1, y + 1, length, color)", "subgraph": null}, {"id": "11", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0]\n [0 5 5 5 5 5 0 0 0 0 0 0]\n [0 5 8 8 8 5 0 0 0 0 0 0]\n [0 5 8 8 8 5 0 0 0 0 0 0]\n [0 5 8 8 8 5 0 0 5 5 5 0]\n [0 5 5 5 5 5 0 0 5 0 5 0]\n [0 0 0 0 0 0 0 0 5 5 5 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 5 5 5 5 0 0 0 0]\n [0 0 0 0 5 0 0 5 0 0 0 0]\n [0 0 0 0 5 0 0 5 0 0 0 0]\n [0 0 0 0 5 5 5 5 0 0 0 0]]"}, {"id": "12", "type": "stmt", "val": "for target in target_list:", "subgraph": null}, {"id": "13", "type": "val", "name": "target", "val": "(4, 8, 2)"}, {"id": "14", "type": "stmt", "val": "(x, y, length) = target", "subgraph": null}, {"id": "15", "type": "val", "name": "x", "val": "4"}, {"id": "16", "type": "val", "name": "y", "val": "8"}, {"id": "17", "type": "val", "name": "length", "val": "2"}, {"id": "18", "type": "stmt", "val": "color = color_by_length(length)", "subgraph": "t301_1_2"}, {"id": "19", "type": "val", "name": "color", "val": "6"}, {"id": "20", "type": "stmt", "val": "input_grid = Traversing the anslist in step 1, for each item (x, y, length), the pixel of the inputgrid (x+1, y+1) is the upper left corner, and the shape is the subgrid of (length-1, length-1) Coloring of all pixels: if the length is 2, it will be painted pink; if the length is 3, it will be painted orange; if the length is 4, it will be painted as teal(input_grid, x + 1, y + 1, length, color)", "subgraph": null}, {"id": "31", "type": "val", "name": "input_grid", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0]\n [0 5 5 5 5 5 0 0 0 0 0 0]\n [0 5 8 8 8 5 0 0 0 0 0 0]\n [0 5 8 8 8 5 0 0 0 0 0 0]\n [0 5 8 8 8 5 0 0 5 5 5 0]\n [0 5 5 5 5 5 0 0 5 6 5 0]\n [0 0 0 0 0 0 0 0 5 5 5 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 5 5 5 5 0 0 0 0]\n [0 0 0 0 5 7 7 5 0 0 0 0]\n [0 0 0 0 5 7 7 5 0 0 0 0]\n [0 0 0 0 5 5 5 5 0 0 0 0]]"}, {"id": "33", "type": "stmt", "val": "return input_grid", "subgraph": null}, {"id": "35", "type": "val", "name": "out", "val": "[[0 0 0 0 0 0 0 0 0 0 0 0]\n [0 5 5 5 5 5 0 0 0 0 0 0]\n [0 5 8 8 8 5 0 0 0 0 0 0]\n [0 5 8 8 8 5 0 0 0 0 0 0]\n [0 5 8 8 8 5 0 0 5 5 5 0]\n [0 5 5 5 5 5 0 0 5 6 5 0]\n [0 0 0 0 0 0 0 0 5 5 5 0]\n [0 0 0 0 0 0 0 0 0 0 0 0]\n [0 0 0 0 5 5 5 5 0 0 0 0]\n [0 0 0 0 5 7 7 5 0 0 0 0]\n [0 0 0 0 5 7 7 5 0 0 0 0]\n [0 0 0 0 5 5 5 5 0 0 0 0]]"}], "edges": [["1", "2"], ["2", "3"], ["3", "4"], ["4", "5"], ["4", "6"], ["4", "7"], ["7", "8"], ["8", "9"], ["6", "10"], ["5", "10"], ["0", "10"], ["7", "10"], ["9", "10"], ["10", "11"], ["1", "12"], ["3", "12"], ["12", "13"], ["6", "14"], ["5", "14"], ["13", "14"], ["7", "14"], ["14", "15"], ["14", "16"], ["14", "17"], ["17", "18"], ["9", "18"], ["18", "19"], ["16", "20"], ["15", "20"], ["11", "20"], ["17", "20"], ["19", "20"], ["31", "33"], ["33", "35"]]}